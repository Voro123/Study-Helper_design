-- MySQL dump 10.13  Distrib 8.0.19, for Win64 (x86_64)
--
-- Host: localhost    Database: study-helper
-- ------------------------------------------------------
-- Server version	8.0.19

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `dt_h3`
--

DROP TABLE IF EXISTS `dt_h3`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `dt_h3` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(80) NOT NULL,
  `introduce` longtext,
  `parentsID` int NOT NULL,
  `sort` int NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=668 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `dt_h3`
--

LOCK TABLES `dt_h3` WRITE;
/*!40000 ALTER TABLE `dt_h3` DISABLE KEYS */;
INSERT INTO `dt_h3` VALUES (50,'colspan','限定元素:td,tr\n使指定单元格跨/*colspan*/列',31,0),(51,'border-collapse','限定元素:table\n使表格元素内的单元格边框共享',32,18),(52,'text-decoration','设置文本线条修饰\n可取值(常用):\nnone:默认。无线条修饰\nunderline:下划线\noverline:文本上方的一条线\nline-through:穿过文本的一条线',32,3),(53,'改变颜色深浅','通过增加颜色RGB的整体三色值,以让颜色变浅;\n通过减少颜色RGB的整体三色值,以让颜色变深。\n\n具体可以#fff和#000作参考',33,0),(61,'stylus','1.简介\nstylus的优势是支持原生CSS的语法结合自身语法使用,\"就算全部都用原生CSS写也是没问题的\"。\n\n2.安装依赖\ncnpm install stylus stylus-loader --save\n\n3.使用\n为style元素添加属性lang=\"stylus\"',34,0),(62,'多媒体查询','检测屏宽应用样式的方法如下:\n@media screen and (min-width:/*val*/){/*这里和正常的css一样写*/}\n设置min-width表示当屏宽大于指定值时应用样式;\n设置max-width表示当屏宽小于指定值时应用样式。',33,0),(63,'*calc()计算属性','calc可以在css中任何能使用长度单位的地方使用,其用来计算两个单位的加减乘除,如:\nwidth:calc(100% - 30px)\n则会计算元素的父级宽度减去30px的宽度。\n需要注意的是,计算单位+,-,*,/左右必须有空格。',33,0),(64,'使元素相对于其父级定位','设置该元素position属性为absolute\n并设置其父元素position属性为relative或其他浮动方式',33,0),(65,'锚点or哈希','锚点,又称为哈希,指网页url地址包括#和其后跟的字符串,可以通过location.hash获取。\n通过设置元素的name属性和锚点后字符串相同,可在跳转页面时直接定位到指定name元素所在的位置。',35,0),(66,'-D','全写 --dev\n包名会被注册在package.json的devDependencies里面，仅在开发环境下存在的包用该修饰符，如babel，sass-loader这些解析器',36,0),(67,'--production','适用场景:下载package.json所依赖包时，只下载生产环境的包时可以使用该指令\n(即不会下载通过-D下载的包)',36,0),(68,'跨域','1.跨域是什么？\n跨域，指浏览器不能执行其他网站的脚本，它时由浏览器的同源策略造成的，是浏览器施加的安全限制。\n\n所谓同源，指域名、协议、端口均相同，否则则为跨域。\n\n要注意的是，浏览器只有在执行js脚本时，才会进行跨域检测，所以跳转到其他网站的html页面什么的是完全没有问题的。\n\n2.如何解决？\n在config文件夹的index.js文件中设置如下:\nproxyTable: {  \n  \'/api3000\': {\n    //目标接口域名\n    target: \'http://localhost:3000/\', \n    //是否跨域\n    changeOrigin: true, \n    pathRewrite: {\n     //重写接口\n      \'^/api3000\': \'/api\'\n    }\n  },\n}\n则当浏览器请求本机3000端口数据时，会由/api代理发起申请，接收的服务端需要在\n监听地址前加上/api以获取并返回数据',37,0),(69,'创建vue-cli项目','vue init webpack /*项目名*/',38,0),(70,'统一参数','每个钩子函数都可以接收两个参数:\nel  作用该指令的DOM对象\nbindling  一个对象，可以获取指令的值等信息',39,0),(71,'bind','最先执行，只调用一次，指令第一次绑定到父元素时调用\n在该事件中拿不到元素的父元素',39,0),(73,'inserted','在绑定元素插入到DOM时\n相比bind执行较晚，但此时父元素已生成',39,0),(74,'componentUpdated','指令所在模板发生更新时触发，在相关事件触发后触发',39,0),(75,'update','指令所在模板发生更新时触发，在相关事件触发前触发',39,0),(76,'unbind','在元素被移除时执行\n这个钩子函数很少用到，但偶尔需要和bind合作控制定时器开关等',39,0),(77,'两个更新钩子的差别','update拿到的是数据改变视图之前的视图内容，\n而componentUpdated拿到的是数据改变视图之后的视图内容',39,0),(78,'轮播图 vue-awesome-swiper','1.安装\n安装模块vue-awesome-swiper\n可安装版本2.5.4和2.6.7(推荐前者)\n通过cnpm i vue-awesome-swiper@[版本号] -S下载\n\n2.配置\n前言:如果安装的是2.5.4的版本则无需单独引入样式文件swiper.css\n\n全局引用:\n    import VueAwesomeSwiper from \'vue-awesome-swiper\'\n    import \'swiper/dist/css/swiper.css\'\n    Vue.use(VueAwesomeSwiper, /* { default global options } */)\n【踩坑记录:Vue.use要在new Vue()之前】\n\n局部引用:\n    import \'swiper/dist/css/swiper.css\'\n    import { swiper, swiperSlide } from \'vue-awesome-swiper\'\n    export default {\n    components: {\n      swiper,\n      swiperSlide\n    }\n\n3.使用\n<template>\n  <div class=\"wrapper\">\n    <swiper :options=\"swiperOption\" class=\"swiper-container\">\n      <!-- slides -->\n      <swiper-slide v-for=\"item of swiperList\" :key=\"item.id\">\n        <img class=\"swiper-img\" :src=\"item.imgUrl\" alt=\"\">\n      </swiper-slide>\n      <!-- Optional controls ,显示小点 -->\n      <div class=\"swiper-pagination\" slot=\"pagination\"></div>\n    </swiper>\n  </div>\n</template>\n\n<script>\n/* 引入轮播图模块 */\nimport { swiper, swiperSlide } from \'vue-awesome-swiper\'\nexport default {\n  name: \'HomeSwiper\',\n  components: {\n    swiper,\n    swiperSlide\n  },\n  data () {\n    return {\n      swiperOption: {\n        // 参数选项，显示小点\n        pagination: \'.swiper-pagination\',\n        // 循环\n        loop: true,\n        // 每张播放时长3秒，自动播放\n        autoplay: 2000,\n        // 滑动速度\n        speed: 1000\n        // delay:1000\n      },\n      // 三张轮播，使用变量循环\n      swiperList: [\n        {\n          id: \'001\',\n          imgUrl: \'图片1\'\n        },\n        {\n          id: \'002\',\n          imgUrl: \'图片2\'\n        },\n        {\n          id: \'003\',\n          imgUrl: \'图片3\'\n        }\n      ]\n    }\n  }\n}\n</script>\n\n<!-- >>>穿透作用，因为swiper-pagination-bullet-active类在组件内部定义的，想要wrapper也能\n作用到，可以用>>> -->\n<style lang=\"stylus\" scoped>\n.wrapper >>> .swiper-pagination-bullet-active {\n  background: #ffffff !important;\n}\n\n.wrapper {\n  width: 100%;\n  height: 0;\n  overflow: hidden;\n  padding-bottom: 26.66%;\n  background: #eeeeee;\n\n  .swiper-img {\n    width: 100%;\n  }\n}\n</style>\n',40,0),(79,'v-cloak','这个指令将保持在元素上直到关联实例结束编译。\n配合CSS可以在元素被编译完成前将其隐藏\n[v-cloak]{\n   display:none\n}',41,0),(80,'关于像素','https://www.zhihu.com/question/313971223',42,0),(81,'px','',43,0),(82,'vh','当前视图高度的1%',43,0),(83,'vw','当前视图宽度的1%',43,0),(84,'vmax','当前视图宽度和高度较长边的1%',43,0),(85,'vmin','当前视图宽度和高度较短边的1%',43,0),(86,'em','相对于父元素字体大小,如父元素font-size=16px,则1em=16px\n\n【不推荐使用,详情看网址文件夹关于像素】',43,0),(87,'rem','相对于html元素字体大小,如html元素font-size=16px,则1em=16px\n\n【不推荐使用,详情看网址文件夹关于像素】',43,0),(88,'单页面网页 SPA','全程\"single page aplication\"\n指组件化构建网页的形式,在页面中进行操作只通过AJAX替换组件\n\n-优势:\n1.利于前后端分离;\n2.方便维护;\n3.用户体验大幅提升(发出请求不用刷新)\n-劣势:\n1.不兼容低版本浏览器;\n2.其内容不能被SAO搜索引擎搜索到。\n\n适用场景:非电商网站',35,0),(89,'JSON.stringify()','将对象转换成JSON形式的字符串',44,10),(90,'JSON.parse()','将JSON形式的字符串转换为对象',44,10),(91,'nodemon','1.简介\n配置该依赖后可以在每次修改代码时自动重启服务器\n\n2.安装\ncnpm i nodemon -g\n\n3.使用\n将启动node程序方式由node app改为nodemon app',45,0),(92,'深入浅出node.js','讲了很多Node底层的细节\n\n还没看',46,0),(93,'Js编程艺术(第二版)','讲了很多js的dom操作,适合js入门',46,0),(94,'Js权威指南','适合在js学一段时间后看,可以了解很多底层的细节(这书1000多页,贼厚)',46,0),(95,'overflow','设置元素内容超出元素本身时的行为\n常用可选值如下:\n1.visible\n默认值。内容会显示在元素之外\n2.hidden\n超出的内容不可见\n3.scroll\n无论内容是否超出元素,出现滚动条以滚动查看元素内容\n4.auto\n内容超出元素时,出现滚动条以滚动查看元素内容',32,18),(96,'background-size','设置元素背景图片的尺寸:\n1.x% y%\n设置图片宽度拉伸至所在元素宽度的x%,高度拉伸至所在元素高度的y%,设置为100% 100%即可设置背景拉到和元素相同尺寸\n2.cover\n将背景图片扩展直到其最短边铺满屏幕,该方法一般会导致图片超出其元素\n3.contain\n将背景图片扩展直到其最长边铺满屏幕,该方法一般会导致图片无法铺满元素',32,10),(97,'npm init','在当前文件添加一个package.json包配置文件\n可加修饰符-y跳过其配置并选择默认配置',47,0),(98,'comment','评论',48,0),(99,'[xyz]','字符集,匹配其中任意一个字符',50,0),(102,'\\w','包括下划线的任意单词字符,等价于[A-Z a-z 0-9_]',50,0),(103,'\\s','空白字符',50,0),(104,'\\d','数字类型',50,0),(105,'\\b','单词开头或结束处的边界',50,0),(106,'^','开始位置,将从字符串第一位开始匹配,若第一位匹配失败,则这次匹配失败',50,0),(107,'$','结束位置,将匹配字符串最后一位',50,0),(108,'*','匹配0次或多次',50,0),(109,'+','匹配1次或多次',50,0),(110,'?','匹配0次或1次',50,0),(111,'{n}','指定匹配n次',50,0),(113,'{n,m}','指定匹配n至m次,m可省略不写',50,0),(114,'(通配符)i','匹配时忽略大小写',50,0),(115,'(通配符)g','全局匹配',50,0),(116,'(通配符)m','如果字符串有换行,按多行匹配',50,0),(117,'(str1|str2)','\'或\'的表示方法',50,0),(118,'[0-9]','48-57',51,0),(119,'常用ASCII码','1.[0-9]→48-57;\n2.[A-Z]→65-90;\n3.[a-z]→97-122;',52,0),(120,'常用Code码','1.[A-Z]→65-90;\n2.(小键盘)[0-9]→48-57;\n3.(数键)[0-9]→96-105;\n4.(小键盘)Enter→13;\n5.(数键)Enter→108;\n6.空格→8',52,0),(121,'display','指定元素的元素样式:\n1.block\n指定元素为块级元素,默认情况下独占一行。可以使用width,height属性,padding,margin属性均可以使用;\n\n2.inline\n指定元素为内联元素,与其他内联元素共用一行。无法使用width,height属性,高宽由元素内容撑开。padding属性可以正常使用,margin属性只有left,right可以使用\n\n3.inline-block\n指定元素为内联块级元素,与其他内联元素共用一行。可以使用width,height属性,padding,margin属性均可以使用\n\n4.list-item\n元素会作为列表显示\n\n5.flex\n弹性盒样式\n\n6.inline-flex\n行内块弹性盒样式\n',32,16),(122,'spellcheck','指定是否自动检查拼写错误,拼写错误时会在错误处用红色波浪线表示,表单控件似乎自带该属性',31,0),(123,'resize','指定元素是否可以被用户拖动改变大小,textarea元素默认为true。\n\n可选值:\nnone:默认。用户无法改变元素大小\nboth:用户可以改变元素高度和宽度\nhorizontal:用户可以改变元素宽度\nvertical:用户可以改变元素高度\n\n补充:若希望该值生效,必须设置为元素添加overflow样式属性。',32,16),(124,'userselect','指定用户选中元素内文本时的样式,指定为none使文字不可被选中',32,16),(126,'pointerEvents','指定元素不能响应事件，如click,hover等',32,16),(127,'constructor','指向原型对象的构造函数',53,0),(128,'prototype','指向构造函数的原型对象',53,0),(130,'word-break','指定单词未结束时需要换行的行为。\n可用值如下:\nnormal:默认值。使用浏览器默认的换行规则\nbreak-all 在单词内换行\nkeep-all 只能在半角字符或连字符\"-\"处换行',32,1),(131,'white-space','元素内文本出现空白时的行为\n可用值如下:\n1.normal(默认):浏览器会忽略空白\n2.pre:空格会被保留,等同于标签<pre>\n3.nowrap:文本不会换行\n4.pre-wrap:保留空白,但是正常换行\n5.pre-line:合并空白,但是正常换行',32,16),(132,'text-overflow','设置文本溢出元素时如何处理文本\n可用值如下:\n1.ellipsis:用省略号表示超出的文本\n2.[string]:用给定的字符串表示超出的文本\n3.clip:修剪文本',32,5),(133,'将超出父元素的元素全部隐藏','设置父元素overflow:hidden,并设置超出父元素宽度的元素自动到下一行。\n然后调整父元素高度至只能显示一行子元素的高度,即可实现超出部分隐藏。',33,0),(134,'offsetTop','返回元素距离其父元素顶端的距离',55,0),(135,'clientTop','返回元素上边框宽度',55,0),(136,'scrollTop','返回元素的顶部到当前窗口显示顶端的距离',55,0),(141,'offset()','该方法返回一个对象\n其属性如下:\n1.top 返回元素的绝对位置纵坐标\n2.left 返回元素的绝对位置横坐标',1006,0),(142,'position()','该方法返回一个对象\n其属性如下:\n1.top 返回元素的相对父元素的纵坐标\n2.left 返回元素的相对父元素的横坐标',1006,0),(143,'阿里巴巴图标库','https://www.iconfont.cn/\n英文名:Iconfont\n需要的图标基本都可以在里面找到。\n图标字体使用方法:\n1.进入图标管理-我的项目,新建一个项目\n2.找到你想要的图标,加入购物车\n3.在购物车结算页面点击[添加至项目]\n4.回到之前创建的项目,点击下载至本地\n5.拿到的文件夹丢到项目中,然后通过调用预设类名即可使用对应的字体图标(具体看里面css文件)',1007,0),(144,'菜鸟教程','https://www.runoob.com/\n非常适合新手入门前端的网站。',1007,0),(145,'百度脑图','https://naotu.baidu.com/home\n可以把做项目的一些想法写在上面,类似备忘录。',1007,0),(146,'initial','默认值;初始',48,0),(147,'inherit','继承',48,0),(148,'hook','钩子',48,0),(149,'template','其内容会将整个入口元素替换掉',1008,0),(150,'property','属性,程序中一般简写为prop',48,0),(151,'单向数据流','单向数据流的Vue的通信原则。\n即父组件修改数据,使子组件的props接收数据发生改变。但子组件不能直接修改props接受数据,使父组件数据发生改变。\n其目的是为了避免在多层组件嵌套情况下,内层修改了父组件数据,导致难以定位在哪个内层组件修改的父组件数据,导致程序的应用流向难以理解。',1009,0),(152,'eval()','作用:将字符串转化为js语句并执行,返回内部js语句返回的结果。\n格式:eval(str)\n参数解释:\nstr:要转化的字符串\n\n例:\nvar a=eval(\'1+2\')=>3',44,11),(153,'黑马-node入门','https://www.bilibili.com/video/BV1Ns411N7HU\n适合Node入门,老师讲的很好懂。',1007,0),(154,'黑马-vue入门','https://www.bilibili.com/video/BV1Rb41177KM?p=73\n适合vue入门.虽然只有一半的课程视频(和讲node入门的是同一个老师)。',1007,0),(155,'.sync','1.概念\n该修饰符用来进行父子组件数据的双向绑定(伪)\n\n2.例子\n<text-document \n  :title.sync=\"doc.title\"\n></text-document>\n等同于\n<text-document\n  v-bind:title=\"doc.title\"\n  v-on:update:title=\"doc.title = $event\"\n></text-document>\n\n其中$event为子组件中通过$emit传递的参数\n\n3.补充\n通过v-bind.sync=\"对象\"（注意没有冒号!!!）,对象中包含所有需要传递双向绑定的数据,即可实现多个值的传递',1010,0),(156,'$emit','格式:this.$emit(\'update:propname\',...参数)\n作用:该方法将触发父组件上的当前组件标签所带的\nv-on:update:propname属性对应的方法,参数将被传递给相应的方法\n\n例:\n—子组件test的某个方法中:\nthis.$emit(\'update:ceshi\',111)\n—父组件的对应子组件test标签:\n<test @update:ceshi=\"ceshi\"></test>\n—父组件的methods对应方法:\nceshi(canshu){\n  console.log(canshu) //=>111\n}\n\n补充:\n前缀\'update:\'并不强制要求,但非常推荐如此使用,因为修饰符.sync在使用时会默认传递的参数前面有这段前缀',1011,0),(157,'get,set存取器','1.概述\nes5特性,对象可以给一个属性定义get,set存取器\n\n2.例子\nvar obj = {\n  test: 1,\n  set prop (newval) {\n    if (newval > 5) return\n    else this.test = newval\n  },\n  get prop () {\n    return this.test\n  }\n}\nobj.prop = 4\nconsole.log(obj.prop)//=>4\nobj.prop = 6\nconsole.log(obj.prop)//=>4',1012,0),(158,'enumerable','可枚举性',48,0),(159,'configurable','可配置性',48,0),(160,'descriptor','描述符',48,0),(161,'属性的特性','对象的属性包含一些标识他们可写,可枚举和可配置的特性。\n—数据属性的4个特性\n1.value 值\n2.writable 可写性\n3.enumerable 可枚举性\n4.configurable 可配置性\n\n—存取器的4个特性\n1.get 读取\n2.set 写入\n3.enumerable 可枚举性\n4.configurable 可配置性\n\n对象属性的特性对象可以通过Object.getOwnPropertyDescriptor(obj,propname)方法获取。',1012,0),(167,'Object.getOwnPropertyDescriptor()','1.概述\n获取对象特定属性的特性对象。\n无法获取继承属性。\n\n2.语法\nObject.getOwnPropertyDescriptor(obj,propname)\n-obj:目标对象\n-propname:目标属性字符串\n\n3.补充\n关于属性特性可参阅词条[对象Object]-属性的特性',44,10),(168,'Object.defineProperty()','一、概述\n该方法用于修改对象属性的特性对象。\n若对象属性不存在,则会被创建。\n\n二、语法\nObject.defineProperty(obj,propname,objOfDescriptor)\n-obj:目标对象\n-propname:对象属性名\n-objOfDescriptor:特性对象\n\n三、补充\n关于属性特性可参阅词条[对象Object]-属性的特性',44,10),(169,'Object.defineProperties()','一、概述\n该方法用于一次添加或修改对象的多个属性特性\n\n二、语法\nObject.defineProperties(obj,映射表)\n-obj:目标对象\n-映射表:对象,键名为属性名,值为属性特性\n\n三、补充\n1.该方法的返回值为更改后的对象,因此可以在第一个参数传入一个空对象以新建对象\n2.关于属性特性可参阅词条[对象Object]-属性的特性',44,10),(170,'writable','可写性。\n设置为false时则无法对该属性的值做任何修改',1012,0),(171,'enumerable','可枚举性。\n如设置为false时,for..of..循环无法遍历该属性。',1012,0),(172,'configurable','可配置性。\n若设置为false,则无法再对该属性特性进行修改。',1012,0),(173,'typescript是什么？','',1013,0),(174,'深拷贝是什么?怎么做?','',1013,0),(175,'flex的所有设置属性？','',1013,0),(177,'Object.getOwnPropertyNames','该方法用于获取对象所有自有属性,包括不可枚举属性',44,10),(178,'extensible','可扩展的',48,0),(179,'obj.isPrototypeOf()','一、概述\n该方法用于检测指定对象是否为目标对象的原型,返回布尔值。\n\n二、语法\nobj.isPrototypeOf(obj2)\n-obj:指定对象\n-obj2:目标对象\n\n三、补充\n在es5之前,经常使用obj.constructor.prototype来检测一个对象的原型,但这么做是不可靠的。',44,9),(180,'Object.getPrototypeOf()','一、概念\nes5方法,用于获取对象的原型函数\n\n二、语法\nObject.getPrototypeOf(obj)\n-obj:目标对象',44,8),(181,'对象的可扩展性','一、概述\nes5提供了几个方法来设置对象是否可以添加新的属性,内部属性是否可以配置或删除和被修改。\n\n二、具体方法\n1.锁定(extensible)\n设置对象无法添加新的属性\n检测一个对象是否被锁定:Object.esExtensible()\n使对象被锁定:Object.preventExtensions()\n需要注意是,一但对象被锁定,就无法再变回未锁定的状态了。\n\n2.封闭(sealed)\n设置对象无法添加新的属性,且无法对已有属性进行配置或删除\n检测一个对象是否被封闭:Object.isSealed()\n使对象被封闭:Object.seal()\n\n3.冻结(frozen)\n设置对象无法添加新的属性,且无法对已有属性进行配置,删除或修改\n检测一个对象是否被冻结:Object.isFrozen()\n使对象被冻结:Object.freeze()',1012,0),(182,'seal','封闭',48,0),(183,'frozen','冻结的',48,0),(184,'freeze','冻结',48,0),(185,'Object.preventExtensions()','1.概述\n修改对象的可扩展性为锁定,即无法添加新的属性\n\n2.语法\nObject.preventExtensions(obj)\n-obj:目标对象',44,6),(186,'Object.seal()','1.概述\n修改对象的可扩展性为封闭,即无法添加新的属性,且无法对已有属性进行配置或删除\n\n2.语法\nObject.seal(obj)\n-obj:目标对象',44,6),(187,'Object.freeze()','1.概述\n修改对象的可扩展性为冻结,即无法添加新的属性,且无法对已有属性进行配置,删除或修改\n\n2.语法\nObject.freeze(obj)\n-obj:目标对象',44,6),(188,'serialization','序列化',48,0),(189,'notation','符号',48,0),(190,'JSON','全称:JavaScript Object Notation(符号)\n翻译:JavaScript对象表示法',1014,0),(191,'SPA','全称:Single Page Application\n翻译:单页面应用',1014,0),(192,'infinity','无穷大',48,0),(193,'obj.hasOwnProperty()','一、概述\n该方法返回一个布尔值,判断目标字符串是否为自身的属性。\n\n二、语法\nobj.hasOwnProperty(propname)',44,6),(194,'数组长度','每个数组都可以通过length属性获取到其长度,在js中,程序将始终保持length属性大于数组内部最大索引值,因此。\n1.将length设置为比当前数组索引大的值时:\n数组将会在尾部创建一个空的区域\n2.设置一个大于当前数组最大索引的数组索引时:\n数组长度会变为新的最大索引+1\n3*.将length设置为比当前数组索引小的值时:\n比length大的数组索引值将被删除。',1015,0),(195,'arr.push()','一、概述\n在数组末尾添加一个或多个元素。\n\n二、语法\narr.push(...el)\n-arr:目标数组\n-el:添加的元素',44,6),(196,'arr.unshift()','一、概述\n在数组头部插入一个或多个元素\n\n二、语法\narr.unshift(...el)\n-arr:目标数组\n-el:插入的元素',44,6),(197,'arr.pop()','一、概述\n删除数组尾部的一个元素。\n\n二、语法\narr.pop()',44,6),(198,'arr.shift()','一、概述\n删除数组头部的一个元素。\n\n二、语法\narr.shift()',44,6),(199,'性能优化的方法','1.循环优化\n在for循环中的条件判断表达式的语句每次循环都会被完整执行,有些情况会亏损性能。\n错误示例:\nfor(let i=0;i<arr.length;i++){}\n// 以上数组中,每次遍历都会查询数组的长度,可以使用一个变量将这个长度保存起来以多次使用。\n正确示例:\nfor(let i=0,len=arr.length;i<len;i++){}\n\n2.回收内存优化\njs具有垃圾回收机制,当浏览器检测到某个变量将不再被使用时,自动释放该变量所占的内存。\n而对于对象,浏览器将检测是否还有变量指向对象所占堆内存地址,当检测到没有变量再指向该对象的堆内存地址时,将其释放。\n所以如果要回收对象的内存,可以将所有指向这个对象的变量赋值为null。\n示例:\nlet obj={a:1}\nobj=null',1016,0),(200,'for..in循环','该循环能过滤到继承的属性名,因此要避免用它来过滤数组',1016,0),(201,'arr.forEach()','一、概述\n该方法用于按索引顺序遍历数组的每一个元素并将其作为参数传递给要执行的方法\n\n二、语法\narr.forEach(func(el,index,arr2),thisVal)\n-el:当前遍历元素\n-index:可选。当前遍历元素下标\n-arr2:可选。当前遍历元素所属数组\n-thisVal:可选。函数执行时this的指向\n\n三、缺陷\n不能使用break语句中断循环，也不能使用return语句返回到外层函数。\n',44,6),(202,'matrix','矩阵',48,0),(203,'arr.sort()','一、概述\n对数组进行排序,将影响原数组。默认情况下按照字母表排序,也可以传入一个函数以指定如何排序。\n\n二、语法\narr.sort(func(a,b))\n-func(a,b):a为比较的第一个数,b为比较的第二个数,js内部进行排序时,它将依次使用数组中的两个元素作为参数调用该方法。若返回值<0,表示第一个参数应该在前;若>0,表示第二个参数应该在前;若=0,表示不发生改变。',44,6),(204,'arr.concat()','一、概述\n该方法将连接两个或多个数组,并将结果传递给调用数组。\n\n二、语法\narr.concat(...arr2)\n-arr:原数组,结果将改变该数组\n-arr2:被连接的数组',44,6),(205,'arr.slice()','一、概述\n该方法将截取数组的一部分并返回一个新数组,不会改变原数组。\n\n二、语法\narr.slice(a,b)\n-a:开始截取的位置\n-b:可选。结束截取的位置。\n\n三、补充\n将参数指定为负数时将从数组末尾开始计算,如-1指数组最后一位',44,6),(206,'arr.splice()','一、概述\n该方法是插入或删除元素的通用方法,将返回被替换的部分,改变原数组。\n\n二、语法\narr.splice(a,b,...c)\n-a:开始替换的位置下标\n-b:可选。替换的长度\n-c:可选。用来替换的新元素\n\n三、补充\nsplice()方法非常灵活,可以用来插入和删除元素,也可以同时完成这两件事。\n1.删除元素\narr.splice(5) //=>将删除数组下标为5的元素及其之后的元素\narr.splice(5,2) //=>将删除数组下标为5的元素开始的2位元素\n2.插入元素\narr.splice(5,0,\'aaa\',\'bbb\') //=>将在数组第5位之前插入两个元素\'aaa\'和\'bbb\',并使其之后的数组元素下标+1\n3.替换元素\narr.splice(5,2,\'aaa\',\'bbb\') //=>将把数组第5位开始2个元素替换为\'aaa\',\'bbb\'',44,6),(207,'arr.map()','一、概述\n将调用的数组的每个元素传递给指定函数,并返回新的数组,该方法不改变原数组。\n\n二、语法\narr.map(func(val,index,arr2),thisVal)\n-val:当前遍历的元素\n-index:可选。当前遍历的元素下标\n-arr2:可选。当前遍历的元素所在数组\n-thisVal:可选。函数的this指向\n\n三、补充\nforEach与map方法的区别仅在forEach修改原数组,而map返回一个新数组\n\n四、缺陷\n不能使用break语句中断循环，也不能使用return语句返回到外层函数。\n',44,6),(208,'arr.filter()','一、概述\n将调用的数组的每个元素传递给指定函数,当函数返回true时,在新数组中加入该元素,该方法不改变原数组。\n\n二、语法\narr.filter(func(val,index,arr2),thisVal)\n-val:当前遍历的元素\n-index:可选。当前遍历的元素下标\n-arr2:可选。当前遍历的元素所在数组\n-thisVal:可选。函数的this指向\n\n三、实例\nvar arr=[1,2,8,9]\nnewarr=arr.filter(function(val){\n   return val>5\n})\nconsole.log(newarr) //=>[8,9]\n\n四、补充\n若数组中有元素未定义(稀释数组),则filter方法将跳过它们并总是返回一个稠密数组',44,6),(209,'arr.every()','一、概述\n将调用的数组的每个元素传递给指定函数,若遍历的每个元素返回true,则该方法返回true,否则返回false\n\n二、语法\narr.every(func(val,index,arr2),thisVal)\n-val:当前遍历的元素\n-index:可选。当前遍历的元素下标\n-arr2:可选。当前遍历的元素所在数组\n-thisVal:可选。函数的this指向',44,6),(210,'arr.some()','一、概述\n将调用的数组的每个元素传递给指定函数,若有任何一个遍历的元素返回true,则该方法返回true,否则返回false\n\n二、语法\narr.some(func(val,index,arr2),thisVal)\n-val:当前遍历的元素\n-index:可选。当前遍历的元素下标\n-arr2:可选。当前遍历的元素所在数组\n-thisVal:可选。函数的this指向',44,6),(211,'arr.reduce()','一、概述\n该方法用于遍历数组的元素执行函数,并保留执行的结果进行下一次遍历,将返回最后一次函数执行的结果。\n\n二、语法\narr.reduce(func(a,b),initialVal,thisVal)\na:上一次遍历的结果,若为第一次遍历,则为initialVal的值;若未指定initialVal,则跳过第一次遍历并返回第一个元素\nb:当前遍历的元素\ninitialVal:可选。初始值\nthisVal:可选。this指向\n\n三、示例\narr=[1,2,3]\nvar n=arr.reduce(function(a,b){\n  return a+b\n},4)\nconsole.log(n) //=>10',44,4),(212,'arr.reduceRight()','一、概述\n该方法用于从右到左遍历数组的元素执行函数,并保留执行的结果进行下一次遍历。\n\n二、语法\narr.reduceRight(func(a,b),initialVal,thisVal)\na:上一次遍历的结果,若为第一次遍历,则为initialVal的值;若未指定initialVal,则跳过第一次遍历并返回第一个元素\nb:当前遍历的元素\ninitialVal:可选。初始值\nthisVal:可选。this指向\n\n三、示例\narr=[1,2,3]\nvar n=arr.reduce(function(a,b){\n  return a+b*2\n})\nconsole.log(n) //=>1+2*2+3*2=11\nvar m=arr.reduceRight(function(a,b){\n  return a+b*2\n})\nconsole.log(m) //=>3+2*2+1*2=9\n\n四、补充\nreduce和reduceRight的唯一区别在于reduceRight从右到左遍历数组。',44,4),(213,'arr.indexOf()','一、概述\n返回数组中第一个值为指定值的元素下标\n\n二、语法\narr.indexOf(el,beginIndex)\n-el:查找的元素值\n-beginIndex:开始查找的位置',44,4),(214,'arr.lastIndexOf()','一、概述\n返回数组中最后一个值为指定值的元素下标\n\n二、语法\narr.lastIndexOf(el,beginIndex)\n-el:查找的元素值\n-beginIndex:开始查找的位置',44,4),(215,'duration','持续时间',48,0),(216,'animation-name','指定播放动画的名称。',32,16),(217,'animation-duration','指定动画完成的时间',32,16),(218,'animation-delay','指定动画延时几秒播放',32,16),(219,'animation-iteration-count','指定动画重复次数。\n可选值如下:\n[n]s:n秒\ninfinite:表示无限重复播放。',32,16),(220,'animation-direction','指定动画是否在偶数周期逆向播放。\n\n可选值如下:\nnormal:默认值,否\nalternate:是',32,16),(221,'animation-play-state','指定动画正在运行或是暂停。\n\n可选值如下:\npaused:正在暂停\nrunning:正在播放',32,14),(222,'animation-fill-mode','指定动画未播放时,元素的样式。\n\n可选值如下:\nnone:默认。不改变默认行为\nforwards:当动画完成时,保持最后一帧的属性值\nbackwards:在animation-delay时间内,应用动画第一帧初始属性值\nboth:同时应用forwards和backwards',32,15),(223,'background-attchment','指定元素的背景图像是否随其滚动条位置滚动\n\n可选值如下:\nscroll:默认值。背景图像随滚动条位置滚动\nfixed:当页面其余部分滚动时,背景图像不会滚动',32,8),(224,'background-postion','设置元素背景图像的起始位置\n\n可选值如下:\nx% y%:表示元素的背景图像在元素的横轴x%,纵轴y%处\n\n补充:\n为元素设置background-attchment:fixed以保证该属性在所有浏览器下可用',32,8),(225,'background-repeat','设置元素的背景图像如何重复。\n\n可选值如下:\nrepeat:默认值。背景图像将在水平和垂直方向上重复\nrepeat-x:背景图像将在水平方向上重复\nrepeat-y:背景图像将在垂直方向上重复\nno-repeat:背景图像不重复',32,8),(226,'background-clip','设置背景图像的绘制区域。\n\n可选值如下:\nborder-box:背景裁剪到边框盒\npadding-box:背景裁剪到内边距框\ncontent-box:背景裁剪到内容框',32,8),(227,'background-origin','设置背景图像相对于哪里来定位。\n\n可选值如下:\npadding-box:相对于内边距框来定位\nborder-box:相对于边框盒来定位\ncontent-box:相对于内容框来定位\n\n补充:\n若background-attchment设置为fixed,则该属性没有效果',32,8),(229,'outline','轮廓',48,0),(230,'source','来源',48,0),(231,'border-image-source','设置边框填充图片\n\n可选值如下:\nurl(图片地址)',32,8),(232,'border-image-slice','设置边框图片的向内偏移量。\n\n可选值如下:\na%( b% c% d%):可指定最多4个偏移值,其设置规则和padding一致。\n[a]px:(...)\nfill:保留边框图像的中间部分',32,8),(233,'border-image-width','设置边框图片的宽度。\n\n可选值如下:\na%( b% c% d%):可指定最多4个宽度值,其设置规则和padding一致。\n[a]px:(...)\nauto:宽度为对应图像切片的固有宽度',32,8),(234,'border-image-outset','规定边框图像超过边框的量。\n\n可选值如下:\n[a]px:可指定最多4个偏移值,其设置规则和padding一致。\nnumber:对应相应background-image-width的倍数',32,8),(235,'border-image-repeat','设置边框图片如何显示。\n\n可选值如下:\nrepeat:重复图片来填充区域\nstretch:拉伸图片来填充区域\nround:同repeat,但若无法完整平铺所有图像,对图像进行缩放以适应区域',32,8),(236,'*box-shadow','为元素边框添加阴影\n\n其值格式为:\nbox-shadow:h-shadow v-shadow blur spread color inset\nh-shadow:必需。水平阴影的位置,允许负值。\nv-shadow:必需。垂直阴影的位置,允许负值。\nblur:模糊距离。\nspread:阴影尺寸。\ncolor:阴影颜色。\ninset:将外部阴影改为内部阴影。',32,8),(237,'opacity','设置元素的透明度(从0.0到1.0)',32,8),(238,'font-style','设置字体的风格。\n\n可选值如下:\nnormal:默认。浏览器显示一个标准的字体样式\nitalic:斜体风格\noblique:倾斜风格',32,8),(239,'font-weight','设置字体粗细\n\n可用值如下:\nnormal:默认。\nbold:粗体\nbolder:加粗体\nlighter:字体将比正常更细',32,8),(240,'counter-reset','创建或重置一个计时器。\n\n值格式如下:\ncounter-reset:id number\nid:计时器的id,以便进行读取\nnumber:可选。初始化或重置的值,默认为0\n\n补充:\n读取一个计时器的值的格式为counter(id)',32,6),(241,'counter-increment','指示该选取器每次出现时定时器的递增/减量\n\n值格式如下:\ncounter-increment:id number\nid:指定定时器的id\nnumber:每次的递增量,可以为负数',32,6),(242,'list-style-type','设置ul列表的项目标记样式为预设样式\n\n可用值如下:(仅记录常用的)\nnone:取消项目标记\ndisc:默认。实心圆\ncircle:空心圆\nsquare:实心方块\nupper-roman:大写罗马数字(I,II,III,IV,V等)\nlower-alpha:小写字母\nupper-alpha:大写字母\n...',32,6),(243,'list-style-image','设置ul列表的项目标记样式为指定图片\n\n值格式如下:\nlist-style-image:url(图片路径)',32,6),(244,'list-style-position','设置ul项目标记的位置。\n\n可用值如下:\ninside:列表项目标记放置在文本内,且环绕文本根据标记对齐\noutside:默认值。列表项目标记放置在文本之外',32,6),(245,'column-count','规定元素应该被分隔的列数。\n\n可选值:\n[number]:可以用数字直接指明分隔列数\nauto:由其他属性决定列数,如column-width',32,6),(246,'column-fill','规定如何对列进行填充。\n\n可选值:\nbalance:对列进行协调,浏览器应对列长度的差异进行最小化处理\nauto:按顺序对列进行填充,列长度会各有不同',32,6),(247,'column-gap','规定列与列之间分隔线左右的总间隔\n\n可选值:\n[length]:将列间间隔设置为指定的长度\nnormal:规定列间间隔为一个常规的间隔',32,6),(248,'column-rule-color','设置列之间分隔线的颜色\n\n值格式:[color]',32,6),(249,'column-rule-style','设置列与列之间的分隔线线条样式。\n\n可选值:\nnone:取消分隔线\nhidden:隐藏分隔线\ndotted:点状\ndashed:虚线\nsolid:实线\ndouble:双实线',32,6),(250,'column-rule-width','设置列间分隔线的宽度\n\n值格式:[length]',32,6),(251,'column-span','指定元素应该跨多少列\n\n值格式:[count]||all\nall:元素将跨越所有列',32,6),(252,'column-width','指定每一列的宽度。\n\n值格式:[length]||auto\nauto:由浏览器决定宽度',32,6),(253,'clip','裁剪绝对定位元素的四个方向\n\n值格式:[top] [right] [bottom] [left]',32,6),(254,'cursor','设置用户光标在元素上时的样式\n\n可选值:(仅记录常用值)\nurl(图片路径):用自选图片代替光标,若选择该值,应再在其前定义一个普通光标,以防目标图片丢失\ndefault:默认光标。一般是一个箭头\nauto:默认值。浏览器设置的光标\ncrosshair:十字状\npointer:手状,常用值\nmove:指示元素可被拖动\ntext:在文字上时的鼠标样式\nhelp:帮助样式\n...',32,6),(255,'float','规定元素是否浮动。\n\n可用值:\nleft:向左浮动\nright:向右浮动\nnone:默认值。不浮动\n\n补充:\n浮动元素一般情况下都不会压住文字。',32,6),(256,'*vertical-align','设置元素的基线相对于父元素的基线的垂直对齐\n\n可用值:\nbaseline:默认值。元素放置在父元素的基线上\nsub:垂直对齐文本的下标\nsuper:垂直对齐文本的上标\ntop:对齐父元素的顶端\nmiddle:对齐父元素的中间\nbottom:对齐父元素的底部\ntext-bottom:对齐父元素文本的底部\n[%]:使用line-height的百分比来排列元素,允许使用负值\n\n补充:\n如果希望元素居中,可以在父元素内设置一个与要垂直居中元素同级的inline-block元素,高度为父元素的100%,vertical-align属性为middle',32,6),(257,'position','规定元素如何定位。\n\n可用值如下:\nstatic:(默认值)按正常文档流定位\nrelative:相对定位\nabsolute:绝对定位,相对于static以外的第一个父元素定位\nfixed:绝对定位,相对于浏览器窗口定位\nsticky:粘性定位,若元素按正常文档流在用户浏览器视窗内,则按正常文档流排序;否则根据top,left属性决定元素相对于浏览器窗口定位。该值尚未被所有浏览器支持',32,6),(258,'border-spacing','限定元素:table\n设置表格内单元格的横、纵间距\n\n值格式:[x]px [y]px\nx为横间距,y为纵间距\n若省略y,则横纵间距都将设置为x',32,6),(259,'empty-cells','限定元素:table\n设置表格中的空单元格如何显示。\n\n可用值:\nshow:默认值。在空单元格周围绘制边框\nhide:不在空单元格周围绘制边框',32,6),(260,'table-layout','限定元素:table\n指定表格内单元格超出其宽度时的行为。\n\n可用值如下:\nautomatic:默认值。列宽度由单元格内容决定\nfixed:列宽度由单元格宽度决定',32,6),(261,'*letter-spacing','设置元素内字符间距。\n\n值格式:\nletter-spacing:[a]px\na:字符间距,可以是负数',32,6),(262,'line-height','设置当前元素内字体的行高\n\n可用值:\n[a]px:直接指定字体高度\na%:指定当前元素字体大小的a%',32,6),(263,'text-indent','指定元素文本首行的缩进,允许使用负值。\n\n值格式:[a]px',32,6),(264,'text-shadow','指定元素内文本的阴影效果。\n\n值格式:h-shadow v-shadow blur color\nh-shadow:水平阴影的位置,允许负值\nv-shadow:垂直阴影的位置,允许负值\nblur:可选。模糊的距离\ncolor:可选。阴影的颜色',32,6),(265,'text-transform','设置元素内文本的字母大小写。\n\n可用值:\nnone:默认。\ncapitalize:文本中的每个单词以大写字母开头。\nuppercase:所有字母转化为大写。\nlowercase:所有字母转化为小写。',32,6),(266,'Unicode','一、概述\nUnicode(统一码)是计算机科学领域的一种业界标准,它是为了解决传统字符编码方案而产生的。它为每种语言的每个字符设定了统一且唯一的字符编码,以满足跨语言、跨平台的转换。\n\n二、起源\n因为计算机只能处理数字,而无法处理文本,所以要把文本转换为数字处理。\n\n最早的计算机设计将8个比特(bit)存储为1个字节(byte),这样1个字节能代表的字符就只能有255个。而ASCII编码将0-127位作为大小写英语字母、数字和一些其他符号,解决了用计算机表示字母和数字的问题。\n\n但这样显然是不够的,中文和一些其他国家的语言无法再计算机上用八进制表示出来,于是,Unicode编码应运而生。\n\nUnicode编码通常用两个字节(十六进制)来表示一个字符,原有的英语字母也全都改为用两个字节表示。\n\nutf-8,utf-16,utf-32则是将数字转换为程序数据的编码方案。\n\n三、补充\n中文Unicode编码区间:4E00-9FBF',1014,0),(267,'word-spacing','设置元素中文本的单词间距。\n\n值格式:[a]px\na:单词间距,允许设为负值以让单词之间的距离的更紧',32,2),(269,'word-wrap','允许长单词换行到下一行。\n\n可用值:\nnormal:默认。只在允许的断字点换行\nbreak-word:在长单词或url地址内部进行换行',32,2),(270,'*transform','对元素进行2D/3D转换,包括旋转、缩放、移动和倾斜操作\n\n可用值:\nnone:默认值。不进行任何转换\n\ntranslate([x]px,[y]px):移动。向右平移x,向下平移y,允许负值\n\nscale([x],[y]):缩放。宽度变为原宽度x倍,高度变为原高度y倍\n\nrotate([a]deg):2D旋转。a为旋转的角度,旋转的基点位置由 transform-origin 属性决定\n\nrotate3d([x],[y],[z],[angle]deg):3D旋转。x(从下向上旋转),y(从左到右旋转),z(以方框中心为原点,顺时针旋转)分别为三个角度旋转的矢量值(0.0-1.0),angle是旋转的角度\n\nskew([x]deg,[y]deg):倾斜。x为向x轴正方向的倾斜角度,y为向y轴正方向的倾斜角度\n\n补充:\n1.若需要同时使用一种以上的变换效果,需要用空格隔开\n2.若要制作3d盒子的效果,可以先做出2d平面图再改成3d',32,0),(271,'有的css加前缀的原因(不同浏览器)','例:-webkit-transform: rotateX(120deg)\n\n在标准还未确定时，部分浏览器已经根据最初草案du实现了部分功能。\n为了与之后确定下来dao的标准进行兼容，所以每种浏览器使用了自己的私有前缀与标准进行区分。\n当标准确立后，各大浏览器将逐步支持不带前缀的css新属性',33,0),(272,'transform-origin','设置元素旋转时的基点位置。\n\n值格式:\ntransform-origin:[x-axis] [y-axis] [z-axis]\n\n其参数解释如下:\nx-axis:指定基点被置于x轴的何处,可能的值有left,center,right,[length],[x%]\ny-axis:指定基点被置于y轴的何处,可能的值有top,center,bottom,[length],[y%]\nz-axis:指定基点被置于z轴的何处,可能的值有[length]',32,0),(273,'CSS性能优化','1.安卓上使用left属性会导致卡顿。\n可以使用transform:translateX代替',33,0),(274,'perspective','指示元素与视图的距离。父元素设置该属性后,允许设置其子元素的transformZ属性。该属性尚未被所有浏览器支持。\n\n值格式:[a]px',32,0),(275,'angle','角度',48,0),(276,'transform-style','设置元素的子元素怎么在三维空间呈现。\n\n可用值:\nflat:默认。所有子元素在2d平面中呈现\npreserve:所有子元素在3d空间中呈现',32,0),(277,'设置3D动画效果','1.可以先将3D元素以2D形式呈现,然后再进行翻转等操作变成3D\n\n2.设置父元素perspective属性为1000px(一般),否则\n3d移动转换属性将无法被应用\n\n3.设置父元素transform-style属性为preserve-3d,否则父元素旋转时看不到子元素的3d转换效果',33,0),(278,'degree','角度。\n可缩写为deg',48,0),(279,'*transition','设置元素的过渡效果,是四个过渡CSS属性的缩写版。\n\n值格式:\ntransition :[transition-property] [transition-duration] [transition-timing-function] [transition-delay]\ntransition-property:指定要应用过渡的属性,可取值all表示所有属性都需要过渡\ntransition-duration:指定过渡的持续时间\ntransition-timing-function:指定过渡动画的速度曲线,其值格式为cubic-bezier(n,n,n,n),n是0.0-1.0间的一个浮点数,使用贝塞尔曲线进行速度曲线计算\ntransition-delay:指定过渡的延时',32,0),(280,'outline','为元素添加轮廓(位于边框之外)\n\n值格式:\noutline:[w]px [style] [color]\nw:轮廓宽度\nstyle:线条样式\ncolor:轮廓颜色',32,0),(281,'outline-offset','设置元素轮廓的向外偏移值。\n\n值格式:[a]px',32,0),(282,'horizontal','水平',48,0),(283,'vertical','垂直',48,0),(284,'*','选择所有元素。',1017,0),(285,'+el','选择当前元素之后的符合条件的兄弟元素。\n\n例:div+p\n表示div之后同级的所有p元素',1017,0),(286,'[attr]','选择带有指定属性的所有元素。',1017,0),(287,'[attr]~=val','选择所有指定属性字符串中带有指定值的元素。',1017,0),(288,'[attr]|=val','选择所有指定属性以指定值开头的元素。\n\n也可以写成[attr^=val}',1017,0),(289,':link','选择所有未被访问的链接。',1017,0),(290,':visited','选择所有已访问过的链接。',1017,0),(291,':active','选择处于活动状态的链接,活动状态类似于鼠标按在该链接上时的状态。',1017,0),(292,':focus','选择获得焦点的input元素。',1017,0),(293,':first-letter','选择元素的文本首字母',1017,0),(294,':first-line','选择元素的首行文本',1017,0),(295,'~el','选择下一个兄弟元素为指定元素的元素。\n\n例:\np~div 则会选择页面中所有前一个兄弟元素是p的div元素',1017,0),(296,'[attr$=val]','选择所有指定属性以val结尾的指定元素。',1017,0),(297,'::-webkit-slider-thumb','限定元素:input[type=range]\n设置滚动条元素的滑动块样式。\n\n注意:必须配合-webkit-appearance: none使用,去除系统的默认样式。',1017,0),(298,':only-of-type','选择属于其父元素唯一指定元素的元素。',1017,0),(299,':nth-of-type(a+bn)','选择其父元素下第a+bn个指定子元素。',1017,0),(300,':nth-last-of-type(a+bn)','选择其父元素下倒数第a+bn个元素。',1017,0),(301,'*:empty','指定没有子元素的指定元素',1017,0),(302,':target','选择当前指向的锚点链接',1017,0),(303,'::selection','选择被用户选中的文本',1017,0),(304,'\'Comic Sans MS\', cursive, sans-serif','比较可爱的字体。',1018,0),(305,'Tahoma, Geneva, sans-serif','让人感觉粗体比较能突出重点。',1018,0),(306,'\'Trebuchet MS\', Helvetica, sans-serif','有趣的字体',1018,0),(307,'Georgia, serif','很适合正经场合的字体',1018,0),(308,'\'Palatino Linotype\', \'Book Antiqua\', Palatino, serif','比较清秀的字体',1018,0),(309,'W3C','W3C(World wide web Consortium)指万维网联盟,它们的主要工作是发展Web规范,这些规范描述了Web的通信协议(如HTML和XHTML)和其他构建模块。',1014,0),(310,'HTML5','HTML5是HTML最新的修订版本，2014年10月由万维网联盟（W3C）完成标准制定。\n\nHTML5的设计目的是为了在移动设备上支持多媒体。\n\nHTML5 仍处于完善之中。然而，大部分现代浏览器已经具备了某些 HTML5 支持。',35,0),(312,'header','指示元素包含页面头部内容',1019,0),(313,'nav','指示元素包含页面导航内容',1019,0),(314,'navbar','导航栏',48,0),(315,'article','指示元素包含可独立主体内容',1019,0),(316,'aside','指示元素包含页面侧边栏内容',1019,0),(317,'footer','指示元素包含页面底部内容',1019,0),(318,'valid','有效',48,0),(395,'切图-Cutterman','一个PS切图插件,能完成一键图层选中区域导出的操作。\n价格:免费\n要求:ps不是绿色版,可通过查看ps窗口-扩展功能看里面是不是灰的,灰的就是绿色版,不能用',1022,0),(396,'*CSS属性书写顺序','形成良好的CSS书写习惯能使代码看起来更简洁,在修改时也更一目了然。\n\n(1)位置属性(position, top, right, z-index, display, float等)\n\n(2)大小(width, height, padding, margin)\n\n(3)文字系列(font, line-height, letter-spacing, color, text-align等)\n\n(4)背景(background, border等)　　(5)其他(animation, transition等)',33,1),(397,'精灵图技术','一、概述\n  精灵图技术是将一个页面的所有需要的图片整合到一张大图中,并在需要时从这种大图里获取需要图片部分的技术。\n\n二、为什么需要精灵图技术?\n  在浏览器加载页面时,需要的每一张图片,浏览器都会向服务器发送一次请求。若页面有50张图片,浏览器就要向服务器发送50次请求,这样对服务器的压力过大,因此需要使用精灵图技术对图片进行整合。\n\n三、精灵图的使用\n  通过CSS属性background-position配合PS标尺调整使用对应图片。\n\n四、精灵图的缺点\n1.图片体积比较大\n2.图片本身放大和缩小容易导致失真\n3.图片制作完毕后,想更换非常复杂',52,0),(398,'margin负值的巧妙应用','\n若有两个盒子元素相邻,都通过float:left浮动。\n若希望他们相邻的边框重叠的话,不能直接都设置border-width:1px。这样会导致两边的边框同时存在,中间的边框变成2px。\n\n此时可以巧妙运用margin的负值,设置盒子的margin-left:-1px,后面盒子的边框就巧妙地盖掉了前面的边框。\n\n此时会有一个疑问:两个盒子同时向左1像素,那它们之间的边框不还是2px吗?\n答案是不会,因为两个盒子都是通过float:left排版的。\n浏览器在渲染时,会先渲染前面的元素,第一个元素渲染时确定了向左1像素。然后再渲染第二个,因为float属性,这个元素会直接去贴向左一格的第一个元素,然后再执行自身的margin-left,所以不用担心这个问题。',33,0),(399,'CSS初始化','一、概念\n指为了照顾不同浏览器和版本元素默认样式的差异,每个网页都需要进行CSS初始化\n\n二、方法\n直接去网上扒一份初始化CSS拿去用',33,0),(400,'section','指示元素包含文档的某块区域。',1019,0),(401,'关于语义化元素','1.语义化元素主要是为了针对搜索引擎SEO的\n\n2*.在IE8及以下版本的IE浏览器,需要将语义化元素转化为块级元素(浏览器默认未知元素为内联元素),并声明语句\n<!--[if lt IE 9]>\n<script src=\"http://api.html5media.info/3.7.3/html5media.min.js\"></script>\n<![endif]-->\n以上语句的作用是检测到浏览器内核版本低于ie9时,引入html5media库,该库包含实现html5语义化的所有功能',1019,1),(402,'关于移动端h5兼容','移动端是完全不用担心html5兼容的。',1023,0),(403,'<video>','一、概述\nhtml5允许在不使用插件的情况下,播放视频格式文件的播放。当然,支持的视频格式是有限的。\n\n二、基本语法\n<video src=\"文件地址\"></video>\n\n三、标签元素常见属性(-后为属性的可选值)\n1.autoplay:指示视频是否自动播放。注意:对于谷歌浏览器,需要同时指定muted属性才可自动播放。\n  -autoplay\n2.muted:指示视频是否静音播放。\n  -muted\n3.controls:指示是否显示自带的暂停,静音等控件。注意:实际开发中一般不指定该属性,转而用js编写视频控件\n  -controls\n4.loop:指示视频是否循环播放。\n  -loop\n5.preload:指示视频是否预加载(在页面刚刚加载完视频未播放时自动加载它的内容)。\n  -auto:预加载  -none:从不\n6.poster:指示视频未播放时显示的图片。\n  -imgurl:图片路径\n\n四、补充\n<video>支持的格式有mp4,WebM和Ogg,其中,WebM和Ogg格式的视频文件都不被IE,Safari浏览器支持,因此尽量使用mp4格式的视频文件。\n但还有个问题,Firefox和Opera的低版本不支持mp4格式,这时就需要为这种情况提供候补其他格式的视频:\n<video controls=\"controls\">\n   <source src=\"movie.mp4\" type=\"video/mp4\">\n   <source src=\"movie.ogg\" type=\"video/ogg\">\n   你的浏览器不支持video元素。\n</video>\n靠前的视频会被优先尝试加载,若加载成功就不会再加载其后的视频文件了。\n若所有视频格式加载失败,则会显示末尾的内容,即此处的一段文字\"你的浏览器不支持video元素\"',1024,0),(404,'<audio>','一、概述\nhtml5允许在不使用插件的情况下,播放音频格式文件的播放。当然,支持的音频格式是有限的。\n\n二、基本语法\n<audio src=\"文件地址\"></audio>\n\n三、标签元素常见属性(-后为属性的可选值)\n1.autoplay:指示音频是否自动播放。该属性也被谷歌浏览器禁用了,且不同于视频,这个只能通过js解决。\n  -autoplay\n2.controls:指示是否显示自带的暂停,静音等控件。\n  -controls\n3.loop:指示是否循环播放。\n  -loop\n4.preload:是否进行预加载。\n  -auto:预加载 -none:从不\n\n四、补充\n和video元素一样,audio允许向下兼容:\n<video controls=\"controls\">\n   <source src=\"movie.mp4\" type=\"video/mp4\">\n   <source src=\"movie.ogg\" type=\"video/ogg\">\n   你的浏览器不支持audio元素。\n</video>',1024,0),(405,'main','指示元素时文档的主要内容,一个网页只有一个main元素。',1019,0),(406,'figure','指示元素是独立的流内容,删除后不应对文档流产生影响。',1019,0),(407,'contenteditable','指定用户能编辑该元素的文本内容',1026,0),(408,'data-*','h5允许给元素自定义新的属性,以便在js中对带有指定自定义属性的元素进行特殊的处理。\n\n例:<div data-focus=\"true\"></div>\n\n补充:\n元素的自定义属性集合对象可以通过el.dataset获取',1026,0),(409,'draggable','指示元素时候可拖拽。\n\n值格式为布尔值,为true时则应用属性特性。',1026,0),(410,'hidden','指示元素不可见。\n\n只要指定了该属性,元素就不可见,无法通过修改html标签来修改元素的显示与否,必须通过js来修改其值为false或删掉该属性使元素可见。',1026,0),(411,'mark','指示元素内文本为标记文本,该标签内的文本会被用黄色标记',1019,0),(412,'progress','指示元素是一个进度条。\n\n属性:\nmax(num):进度条的最大值\nvalue(num):当前进度',1019,0),(413,'address','指示元素内包含个人或某个组织的联系信息等。',1019,0),(416,'autocomplete','规定form和input应该拥有自动完成功能。(自动获取用户之前填写的信息并提供快捷输入)\n\n限定元素:表单元素\n值格式:on/off',1026,0),(417,'novalidate','该属性设置为true时,规定用户提交表单时浏览器不对其进行验证并直接提交。\n\n限定元素:表单元素\n值格式:true/false\n\n例:\n通常情况下,浏览器会在表单提交时对提交信息进行验证。\n<form>\n  <input type=\"email\">\n</form>\n如此处浏览器会验证用户输入的input格式是否为email，若检测到不是,则会取消验证并由浏览器弹出一个报错信息。\n将novalidate设置为true即可禁用。',1026,0),(418,'autofocus','规定元素在进入页面时自动获得焦点。\n\n限定元素:表单元素',1026,0),(419,'formaction','该属性用于描述表单提交的url地址,将覆盖form表单元素的action属性。\n\n限定元素:表单元素>submit\n\n补充:使用该属性可实现同一表单与不同后端接口交互。',1026,0),(420,'formmethod','该属性用于描述表单提交的方式,将覆盖form表单元素的method属性。\n\n限定元素:表单元素>submit,image\n\n补充:使用该属性可实现同一表单与后端接口不同交互方式。',1026,0),(421,'formnovalidate','该属性设置为true时,规定用户提交表单时浏览器不对其进行验证并直接提交,将覆盖form表单的novalidate属性。\n\n限定元素:表单元素>submit',1026,0),(422,'formtarget','该属性指定元素提交数据后的展示。\n\n限定元素:表单元素>submit\n\n可选值:\n_blank:在一个新的窗口打开\n_self:在当前页面打开',1026,0),(423,'list','指向输入域应用的datalistID。\n\n限定元素:表单元素\n\n补充:\n详细用法可以看【html5标签元素】=>【datalist】。',1026,0),(424,'multiple','规定元素可以选择多个值。\n\n限定元素:表单元素',1026,0),(425,'multiple','多选;复选',48,0),(426,'pattern','图案',48,0),(427,'pattern','规定一个正则表达式来验证表单值。\n\n限定元素:表单元素>text,search,url,tel,email,password\n\n值格式:regex',1026,0),(428,'Regex','全写为Regular Expression,也可缩写为Regexp,指正则表达式。\n\n即通过单个字符串来描述、匹配一系列语法规则。',1014,0),(429,'required','规定输入框不能为空。',1026,0),(430,'<datalist>','该元素规定输入域的选项列表,即用户在输入框获取焦点时出现一个下拉箭头,包含一些预设的值可供用户直接选择。\n\n使用方法:\n<input type=\"text\" list=\"class\" />\n<datalist id=\"class\">\n   <option value=\"hello world\"></option>\n   <option value=\"good morning\"></option>\n</datalist>\n注意:datalist的id必须和绑定输入框元素的list属性对应',1024,0),(431,'<output>','用于实时通过特定表达式计算表单内的值并显示。\n\n使用方法:\n<form oninput=\"x.value=a.value+b.value\">\n  <input type=\"number\" id=\"a\" value=\"50\">\n  <input type=\"number\" id=\"b\" value=\"30\">\n  <outinput name=\"x\" for=\"a b\">\n</form>\n此时页面初始化时,会自动获取表单a(50)和表单b(30)的值,并将它们相加,得到的结果显示在outinput中(80)。\n此后每当两个表单中任意一个值发生变化,outinput的值都会重新计算。',1024,0),(432,'type=\"color\"','选取一种颜色。',1028,0),(433,'type=\"date\"','选择一个日期。',1028,0),(434,'前言','大多数html5表单类型未被所有浏览器良好支持,不要过度依赖这些表单类型',1028,0),(435,'type=\"email\"','检测用户输入的内容是否为邮箱格式。\n兼容性较好,几乎所有浏览器支持这个属性。',1028,0),(436,'type=\"number\"','input元素内仅允许输入数字。',1028,0),(437,'type=\"range\"','定义一个滑动条。\n\n属性如下:\nmin:滑动条的最小值\nmax:滑动条的最大值\nvalue:滑动条的当前值\n\n补充:可以通过::-webkit-slider-thumb伪类改变滑动块的样式。',1028,0),(439,'::placeholder','设置元素占位符的样式',1017,0),(440,'type=\"time\"','选择一个时间(无时区)。',1028,0),(441,'type=\"url\"','检测用户输入的内容是否为url格式。\n兼容性较好,几乎所有浏览器支持这个属性。',1028,0),(442,'query','询问',48,0),(443,'document.querySelect()','获取单个元素。\n\n语法:document.querySelect(selector)\nselector:任意CSS选择器字符串',1029,0),(444,'document.querySelectAll()','获取多个元素集合。\n\n语法:document.querySelectAll(selector)\nselector:任意CSS选择器字符串',1029,0),(445,'document.classList','获取元素的类集合对象,该对象内置一些方法,能对该元素的类进行操作。\n\n内置方法:\n1.add(classname)\n为元素添加类\n2.remove(classname)\n移除元素的指定类\n3.contains(classname)\n检测元素是否包含指定类,返回布尔值\n4.toggle(classname)\n若元素不存在指定类,添加,反之移除',1029,0),(446,'el.dataset','获取元素的自定义属性集合对象。\n其键值对应自定义属性名,值对应自定义属性值。\n该值可写。',1029,0),(447,'type=\"file\"','允许用户选择一个或多个文件以提交表单的方式上传到服务器上。\n\n属性:\nvalue:已选择文件的路径,若选择了多个文件,该值只带有选中的第一个文件路径。可以在js中通过input元素的files属性获取。\naccept:描述允许选择文件的类型,以唯一文件类型说明符格式声明其值,多个类型用逗号隔开。\nfiles:指出FileList对象每个已选择的文件及其相关属性集合。\nmultiple:声明该属性时,允许用户选择多个文件。',1030,0),(448,'获取数据类型','通过typeof可以简单获取基本的数据类型Number,String等。\n但若是判断Array,Map一类引用数据类型,typeof通通会返回Object,显然不是想要的结果。\n\n此时可以通过{}.toString.call(data)解决\n对象独有的toString方法能准确的返回数据的类型,可以利用这种特性,通过call更改执行体为想要判断的数据来解决。',1016,0),(449,'FileReader','一、概述\n构造函数,用于配合file表单元素读取客户端文件。\n\n二、原型方法\n1.readAsBinaryString:将文件读取为二进制编码\n2.readAsDataURL:将文件读取成DataURL\n3.readAsTest:将文件读取成文本\n\n三、钩子函数\n1.onloadstart:开始读取文件时触发\n2.onprogress:读取文件时触发,读取完成前该函数将反复执行\n3.onabort:读取文件中断时触发\n4.onerror:读取文件出错时触发\n5.onload:读取文件成功时触发\n6.onloadend:读取文件结束时触发,无论成功失败都会触发\n\n四、使用方法:(file_input为页面的对应file表单元素)\nfile_input.onchange=function(){\n  // 获取用户选择的文件集合第一个元素\n  var files=this.files[0];\n  \n  // 创建读取器\n  var reader = new FileReader();\n\n  // 开始读取\n  reader.readAsText(file);\n\n  // 读取完成后,返回读到的结果\n  reader.onload = function(){\n    console.log(reader.result)\n  }\n}',1029,0),(450,'binary','二进制',48,0),(451,'window.navigator.onLine','检测浏览器的网络状态,联网状态返回true,断网状态返回false',1029,0),(452,'navigator.geolocation','允许用户向web应用程序提供它们的地理位置,处于安全考虑,报告地理位置前会先请求用户许可。\n\n这个属性因不明原因在国内不能很好地起到作用,经常查询不到用户的地理位置信息,建议使用百度地图开放平台API作取代。\nhttp://lbsyun.baidu.com/index.php?title=jspopular3.0',1029,0),(454,'window.localStorage','一、概述\n该对象提供了本地存储数据的一些API。\n传统方式中,网页开发者往往通过document.cookie进行存储,但由于其存储大小只有4k左右,且解析较为困难。h5便提供了新的存储数据对象localStorage和sessionStorage\n\n二、特点\n1.永久存储\n2.多窗口共享\n3.容量约20M\n\n三、内置方法\n1.setItem(key,value)\n设置存储内容\n2.getItem(key)\n获取存储内容\n3.removeItem(key)\n删除存储内容\n4.clear()\n清空存储内容\n\n四、补充\n建议只存储字符串类型的数据,尽管h5规范中允许存储任意类型的数据,但目前还没有浏览器对其实现。\n\n',1029,0),(455,'storage','存储',48,0),(456,'window.sessionStorage','一、概述\n该对象提供了本地存储数据的一些API。\n传统方式中,网页开发者往往通过document.cookie进行存储,但由于其存储大小只有4k左右,且解析较为困难。h5便提供了新的存储数据对象localStorage和sessionStorage\n\n二、特点\n1.生命周期仅维持到当前浏览器窗口的关闭\n2.仅可以在同一个窗口下访问\n3.数据大小为5M左右\n\n三、内置方法\n1.setItem(key,value)\n设置存储内容\n2.getItem(key)\n获取存储内容\n3.removeItem(key)\n删除存储内容\n\n四、补充\n建议只存储字符串类型的数据,尽管h5规范中允许存储任意类型的数据,但目前还没有浏览器对其实现。\n',1029,0),(457,'JS书写规范(个人)','1.习惯性在代码结束处留下一行空白,这样下次书写d代码时就能直接从最后一行开始写下去。\n\n2.一段功能实现后,应在其后留下一行空白再书写之后的代码,这样会显得代码条理更加清晰。\n\n3.加不加分号无所谓,但是要加就全都加,不加就全都别加,这样代码能更加美观。\n\n4.计算符左右习惯性留下一个空白字符,能提升代码的易读性。',1016,0),(458,'前言','多媒体指<audio>和<video>元素。',1032,0),(459,'Google浏览器切换内核方法','1.f12\n2.开发者工具内右上角3竖点\n3.More tools\n4.Network conditions\n5.在弹出的窗口中取消勾选Select automatically\n6.选择下面的Custom',52,0),(460,'background-image','设置元素的背景图片。\n\n可选值:\n1.[url]:选择图片地址以应用背景图片\n2.linear-gradient:线性渐变\n3.gadial-gradient:径向渐变\n\n补充:\n复合背景图片样式可用逗号隔开,其他有关背景图片的属性设置也用逗号隔开，如background-size,先写的背景图片会显示在上层。',32,12),(461,'canPlayType()','该方法检测浏览器是否能播放指定格式的音视频。\n\n语法:video|audio.canPlayType(type)\n参数:\ntype:规定要检测的音频/视频类型,常用值有\n  ①video/ogg   ②video/mp4  ③video/webm\n  ④audio/mpeg  ⑤audio/ogg  ⑥audio/mp4\n\n返回值(String):\n\"probably\" - 最有可能支持\n\"maybe\" - 可能支持\n\"\" - （空字符串）不支持\n',1032,0),(462,'*load()','该方法用于重新加载音视频元素,常用于更改来源或其他设置后对音视频进行更新。\n\n语法:audio|video.load()\n',1032,0),(463,'*play()','开始播放音视频\n\n语法:audio|video.play()\n',1032,0),(464,'*pause()','暂停当前播放的音视频\n\n语法:audio|video.pause()\n',1032,0),(465,'autoplay','设置或返回音视频是否自动播放\n\n可用值:true/false\n',1032,0),(466,'buffered','一、概述\n该属性返回一个TimeRanges对象。TimeRanges对象表示用户的音视频缓冲范围。\n缓冲范围指用户已缓冲的音视频时间范围,若用户跳跃播放,则会有多个缓冲范围。\n\n二、原生方法\n1.length:返回音视频中缓冲范围数量\n2.start(index):返回第index段缓冲范围的起始时间(以秒计)\n3.end(index):返回第index段缓冲范围的结束时间(以秒计)\n',1032,0),(467,'controls','设置或返回音视频时候显示默认音视频控件。\n\n可用值:true/false\n\n补充:一般在实际开发中,都不会用默认的controls属性',1032,0),(468,'currentSrc','返回当前播放音视频的url地址',1032,0),(469,'*currentTime','设置或返回当前音视频的播放进度(以秒计)。',1032,0),(470,'*duration','返回音视频的时间总长度(以秒计)。',1032,0),(471,'ended','判断当前音视频是否已播放结束,返回布尔值。',1032,0),(472,'loop','设置或返回视频是否循环播放。\n\n可用值:true/false',1032,0),(473,'muted','设置或返回音视频是否静音\n\n可用值:true/false',1032,0),(474,'*networkState','返回音视频的加载情况。\n\n返回值(Number):\n- 0 音频/视频尚未初始化\n- 1 音频/视频是活动的且已选取资源，但并未使用网络\n- 2 浏览器正在下载数据\n- 3 未找到音频/视频来源',1032,0),(475,'paused','返回当前音视频是否被暂停。\n\n可用值:true/false',1032,0),(476,'preload','设置或返回页面是否在加载后就立即缓冲音视频。\n\n可用值:\nauto:页面加载完成,立即开始缓冲\nmetadata:页面加载完成,仅加载音视频的元数据\nnone:从不',1032,0),(477,'*readyState','返回当前音视频的播放就绪状态。\n\n返回值(Number):\n- 0 没有关于音频/视频是否就绪的信息\n- 1 关于音频/视频就绪的元数据\n- 2 关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒\n- 3 当前及至少下一帧的数据是可用的\n- 4 可用数据足以开始播放',1032,0),(478,'seekable','返回首个以秒计的视频可寻址范围。\n可寻址范围指的是用户在音频/视频中可寻址（移动播放位置）的时间范围。\n对于流视频，通常可以寻址到视频中的任何位置，即使其尚未完成缓冲。\n\n返回值(TimeRanges):\nlength:获得音频/视频中可寻址范围的数量\nstart(index):获得可寻址范围的开始位置\nend(index):获得可寻址范围的结束位置',1032,0),(479,'seeking','返回用户是否在音视频中寻址(跳跃到某个时间范围)。\n\n返回值:true/false',1032,0),(480,'src','设置或返回当前音视频的来源。',1032,0),(481,'*volume','设置或返回音视频的音量。\n\n可用值(Number):0.0~1.0',1032,0),(483,'clientHeight','获取元素的内部高度,包含内边距,但不包含水平滚动条,边框和外边距。',55,0),(484,'func.bind()','改变函数的this指向,不执行函数。\n\n语法:func.bind(el)\nel:新的this指向',44,4),(485,'func.call()','改变函数的this指向并立即执行函数。\n\n语法:func.call(el)\nel:新的this指向',44,4),(486,'func.apply()','改变函数的this指向并立即执行函数,与call()的区别在于apply可以将参数作为一个数组传入。\n\n语法:func.call(el,paras)\nel:新的this指向\nparas:参数数组',44,4),(487,'路飞学城-html5入门','https://book.apeland.cn/details/489/#%E6%96%B0%E7%9A%84input%E7%B1%BB%E5%9E%8B\n\n学习html5入门还算不错。',1007,0),(488,'abort','设置音视频终止加载时触发的事件。\n该事件是在多媒体数据终止下载时触发，而不是发生错误时触发。\n',1034,0),(489,'loadstart','音视频加载过程开始时触发事件。\n\n补充:\n当音频/视频处于加载过程中时，会依次发生以下事件:\n1.loadstart\n2.durationchange\n3.loadedmetadata\n4.loadeddata\n5.progress\n6.canplay\n7.canplaythrough\n',1034,0),(490,'durationchange','视频时长发生变化时,触发事件。\n当音视频加载后，时长将由 \"NaN\" 变为音视频的实际时长。\n\n补充:\n当音频/视频处于加载过程中时，会依次发生以下事件:\n1.loadstart\n2.durationchange\n3.loadedmetadata\n4.loadeddata\n5.progress\n6.canplay\n7.canplaythrough\n',1034,0),(491,'loadedmetadata','音视频元数据加载完成时,触发事件。\n\n音视频的元数据包括：时长、尺寸（仅视频）以及文本轨道。\n\n补充:\n当音频/视频处于加载过程中时，会依次发生以下事件:\n1.loadstart\n2.durationchange\n3.loadedmetadata\n4.loadeddata\n5.progress\n6.canplay\n7.canplaythrough\n',1034,0),(492,'loadeddata','当前帧的数据已加载,但没有足够的数据来播放指定音视频的下一帧时,触发事件。\n\n补充:\n当音频/视频处于加载过程中时，会依次发生以下事件:\n1.loadstart\n2.durationchange\n3.loadedmetadata\n4.loadeddata\n5.progress\n6.canplay\n7.canplaythrough\n',1034,0),(493,'progress','当浏览器正在下载指定的音视频时,触发事件。\n\n补充:\n当音频/视频处于加载过程中时，会依次发生以下事件:\n1.loadstart\n2.durationchange\n3.loadedmetadata\n4.loadeddata\n5.progress\n6.canplay\n7.canplaythrough\n',1034,0),(494,'canplay','当浏览器能够开始播放指定的音视频时,触发事件。\n\n补充:\n当音频/视频处于加载过程中时，会依次发生以下事件:\n1.loadstart\n2.durationchange\n3.loadedmetadata\n4.loadeddata\n5.progress\n6.canplay\n7.canplaythrough\n',1034,0),(495,'canplaythrough','当浏览器预计能够在不停下来进行缓冲的情况下持续播放指定的音视频时,触发事件。\n\n补充:\n当音频/视频处于加载过程中时，会依次发生以下事件:\n1.loadstart\n2.durationchange\n3.loadedmetadata\n4.loadeddata\n5.progress\n6.canplay\n7.canplaythrough\n',1034,0),(496,'emptied','当目前的播放列表为空时触发事件。\n',1034,0),(497,'ended','当目前的播放列表已结束时触发事件。\n',1034,0),(498,'error','当在音视频加载期间发生错误时触发事件。',1034,0),(499,'pause','当音视频已暂停时触发事件。\n',1034,0),(500,'play','当音视频已开始或不再暂停时触发事件。',1034,0),(501,'playing','当音视频在因缓冲而暂停或停止后已就绪时触发事件。\n',1034,0),(502,'*playbackRate','设置或返回音频/视频的当前播放速度\n\n可用值(Number):\n1.0 默认值。正常速度\n0.5 半速\n2.0 两倍速\n-1.0 视频以正常速度反向播放\n-0.5 视频以半速反向播放',1032,0),(503,'ratechange','音视频播放速度发生改动时触发事件。\n',1034,0),(504,'seeking','用户开始移动/跳跃到音视频中的新位置时触发事件。\n',1034,0),(505,'seeked ','用户已移动/跳跃到音视频中的新位置时触发事件。\n',1034,0),(506,'*stalled','浏览器尝试获取媒体数据，但数据不可用时触发事件。\n',1034,0),(507,'*suspend','浏览器刻意不加载(被阻止)媒体数据时触发事件。\n',1034,0),(508,'timeupdate','音视频播放位置被改变时触发。\n该事件会在开始播放音视频被调用一次。\n',1034,0),(509,'volumechange','当音量被更改后触发事件。\n',1034,0),(510,'waiting','音视频由于需要缓冲下一帧而停止时触发。',1034,0),(511,'适合当背景的颜色','#efebcb 舒缓的淡黄色',1035,0),(512,'body-parser','若希望接受post传递的数据,用原生node写法会很麻烦,这时就可以引入这个包进行快捷操作。\n\n配置方法:(app为express实例,在导入路由前配置)\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\n\n使用方法:req.body',1036,0),(513,'express','提供了很多能简化原生node繁琐语句的接口。',1036,0),(514,'mysql','提供连接和操作mysql数据库的接口。\n\n// 实例(DbHelper.js)\n// 该模块用于进行调用数据库操作\nconst mysql = require(\'mysql\')\nvar obj = {}\n\n// 连接数据库\nfunction connect (callback) {\n  // 创建连接数据库信息实例\n  var connection = mysql.createConnection({\n    host: \'localhost\',\n    user: \'root\',\n    password: \'123456\',\n    database: \'study-helper\'\n  })\n  connection.connect((err, result) => {\n    if (err) return console.log(err)\n    callback(connection);\n  })\n}\n\n//查询数据库并返回数据\nobj.DbSelect = function (cmdstr, callback) {\n  // 如果传了个空语句,直接返回true\n  if (cmdstr === \'\') {\n    return callback(true)\n  }\n\n  connect(function (connection) {\n    connection.query(cmdstr, function (err, rows) {\n      // 断开连接\n      connection.end();\n      if (err) {\n        console.log(err);\n        return console.log(err)\n      }\n      callback(rows)\n    })\n  })\n}\n\n//添加列并返回结果(布尔值)\nobj.DbExecute = function (cmdstr, callback) {\n  // 如果执行的是delete语句且没有where限制,直接返回(防止误删)\n  if (cmdstr.match(/^delete.*/) && !cmdstr.match(/.*where.*/)) return callback(false)\n\n  // 如果传了个空语句,直接返回true\n  if (cmdstr === \'\') {\n    return callback(true)\n  }\n\n  connect(function (connection) {\n    connection.query(cmdstr, function (err) {\n      // 断开连接\n      connection.end();\n      if (err) {\n        console.log(err);\n        return callback(false)\n      }\n      callback(true)\n    })\n  })\n}\n\nmodule.exports = obj;',1036,0),(515,'animation-timing-function','指定动画将如何完成一个周期。\n\n可选值:\n1.cubic-bezier(p1x,p1y,p2x,p2y)\n4个参数组成了一条三阶贝塞尔曲线。\n参数为0到1的整数\n\n2.steps(number_of_steps, direction)\n阶梯函数,该函数将动画的总时长按等距划分,并以定格动画的形式展示。\nnumber_of_steps:正整数,将动画总时长按阶梯数等距划分\ndirection:可选值。start或end，默认end，也可以不写；start表示动画的第一帧会被立即执行,直接从第二帧开始，然后以第一帧结束；end则表示动画从第一帧开始到正常结束；',32,13),(516,'transparent','透明',48,0),(517,'MVC开发模式','一、M-Model 封装数据操作\n二、V-View 视图渲染\n三、Controller 控制器(打杂)',1014,0),(518,'deny','否认;拒绝\n\n过去时:denied 被拒绝',48,0),(519,'*Chinese','装完后VsCode界面将汉化。',1037,0),(520,'Prettier','格式化js,html,css代码,建议在Setting中配置为保存内容触发格式化。',1037,0),(521,'*Bracket Pair Colorizer2','为每对大括号添加不同的颜色,以便快速区分它们的位置。',1037,0),(522,'Auto Rename Tag','html标签重命名时,对应的结束标签也会同步重命名。',1037,0),(523,'Live Server','在本地开启一个Http Server,并且监听用户保存文件动作进行页面自动刷新。',1037,0),(524,'Live Sass Compiler','监听并实时编译scss文件,输出css文件。',1037,0),(525,'折叠/展开代码(js,html,css)','ctrl+k,然后再点击ctrl+0折叠当前文件所有代码(js,html,css)\n\nctrl+k,然后再点击ctrl+j展开当前文件所有代码(js,html,css)',1038,0),(526,'volume','音量',48,0),(527,'grey','灰色',48,0),(528,'-webkit-appearance','去除浏览器自带元素样式。',32,0),(529,'::-webkit-slider-thumb','限定元素:input[type=range]\n设置滚动条元素的滑动块样式',1017,0),(530,'whole','所有的',48,0),(531,'transform','转换',48,0),(532,'ctx.fillRect()','绘制一个填充颜色的矩形。\n\n语法:fillRect(x,y,width,height)\nx,y(Number):绘制矩形的左上角坐标\nwidth,height(Number):矩形的大小',1039,0),(533,'ctx.strokeRect()','绘制一个只填充边框的矩形\n\n语法:strokeRect(x, y, width, height)\nx,y(Number):矩形的左上角坐标\nwidth,height(Number):矩形的大小',1039,0),(534,'ctx.clearRect()','清除矩形区域,使被清除部分完全透明。\n\n语法:clearRect(x, y, width, height)\nx,y(Number):矩形的左上角坐标\nwidth,height(Number):矩形的大小',1039,0),(535,'*canvas.getContext()','该方法返回一个 CanvasRenderingContext2D 对象，该对象实现了一个画布所使用的大多数方法。\n\n语法:canvas.getContext(contextID)\ncontextID:指定希望绘制的图像类型\n   可选值2d,表示2d绘图\n',1039,0),(536,'ctx.fillStyle','指定画笔的填充颜色。\n\n例:ctx.fillStyle=\'#000\'\nctx:通过canvas.getContext()返回的对象',1039,0),(537,'ctx.strokeStyle','指定画笔的描边颜色。\n\n例:ctx.strokeStyle=\'#fff\'\nctx:通过canvas.getContext()返回的对象',1039,0),(538,'ctx.beginPath()','新建一条路径，生成之后，图形绘制api被指向到路径上生成路径。无参数。',1039,0),(539,'*ctx.moveTo()','将画笔移动到指定坐标上。\n当canvas初始化或者beginPath()调用后,通常会使用moveTo()函数设置起点。\n\n语法:ctx.moveTo(x,y)\nx,y:画笔移动到的坐标',1039,0),(540,'ctx.lineTo()','绘制一条从画笔当前位置到指定位置的直线。\n\n语法:ctx.lineTo(x,y)\nx,y:目标位置',1039,0),(541,'ctx.closePath()','闭合路径。',1039,0),(542,'ctx.stroke()','通过路径闭合图形来绘制图形轮廓。',1039,0),(543,'ctx.fill()','填充路径闭合图形。',1039,0),(544,'ctx.arc()','绘制圆弧或圆。\n\n语法:arc(x,y,radius,startAngle,endAngle,anticlockwise)\nx,y:圆心坐标\nradius(Number):半径长度\nstartAngle(Number):绘制起始角度\nendAngle(Number):绘制终点角度\nanticlockwise(Boolean):为true时,逆时针绘制图形,默认值为false',1039,0),(545,'ctx.quadraticCurveTo()','绘制二次贝塞尔曲线。\n\n语法:quadraticCurveTo(cp1x,cp1y,x,y)\ncp1x,cp1y:控制点1的坐标\nx,y:结束点坐标',1039,0),(546,'ctx.bezierCurveTo()','绘制三次贝塞尔曲线。\n\n语法:bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)\ncp1x,cp1y:控制点1坐标\ncp2x,cp2y:控制点2坐标\nx,y:结束点坐标',1039,0),(547,'ctx.globalAlpha','设置画笔透明度值。\n\n可取值:0.0 ~ 1.0',1039,0),(548,'ctx.lineWidth','设置线条长度,数值无单位。',1039,0),(549,'ctx.lineCap','设置线段末端的样式。\n\n可用值:\nbutt:默认。平直的边缘\nround:圆形线帽\nsquare:方形线帽\n\n补充:round和square都会为线条增加其长度/2的图形来显示线帽。',1039,0),(550,'ctx.lineJoin','指定线条的拐角处如何绘制。\n\n可用值:\nmiter:默认。创建尖角\nbevel:创建斜角\nround:创建圆角',1039,0),(551,'ctx.fillText()','渲染填充文本。\n\n语法:ctx.fillText(text,x,y,[,maxWidth])\ntext:要渲染的文本内容\nx,y:渲染文本的左上角坐标\nmaxWidth:绘制的最大宽度',1039,0),(552,'ctx.strokeText()','渲染文本边框。\n\n语法:ctx.strokeText(text,x,y,[,maxWidth])\ntext:要渲染的文本内容\nx,y:渲染文本的左上角坐标\nmaxWidth:绘制的最大宽度',1039,0),(553,'ctx.font','设置绘制文本的样式。\n采用和CSS font属性相同的语法。\n\n值格式:ctx.font = fontsize font-family\nfontsize:字体大小。默认为10px\nfont-family:字体。默认为sans-serif',1039,0),(554,'ctx.textAlign','设置文本的对齐。\n\n可用值:\nstart:默认。文本在指定的位置开始\nend:文本在指定的位置结束\ncenter:文本的中心被放在指定的位置\nleft:文本左对齐\nright:文本右对齐',1039,0),(555,'ctx.textBaseline','设置文本的基线对齐。\n\n可用值:\nalphabetic:默认。文本基线为普通字母基线\ntop:文本基线在文本顶部\nhanging:文本基线是悬挂基线\nmiddle:文本基线在文本正中\nideographic:文本基线是表意基线\nbottom:文本基线在文本底部',1039,0),(556,'ctx.direction','设置文本方向。\n\n可用值:\nltr:从左到右\nrtl:从右到左\ninherit:默认。继承父项',1039,0),(557,'ctx.drawImage()','将一张图片绘制到画布上。\n可以使用另一个canvas画布作为图像源。\n\n语法:ctx.drawImage(imgObj,x,y,width,height,dx,dy,dWith,dHeight)\nimgObj:图像源,须为image或者canvas对象\nx,y:图像源的切片左上角坐标\nwidth,height:图像源的切片大小\ndx,dy:绘制图像的左上角坐标\ndWidth,dHeight:绘制图像的缩放后大小\n\n补充:若为3个参数,则第二、三个参数表示绘制图像的左上角坐标\n\n\n例:\nvar img = new Image();\nimg.onload = function() {\n    ctx.drawImage(img, 0, 0);\n    ctx.beginPath();\n    ctx.moveTo(123, 400);\n    ctx.lineTo(198, 350);\n    ctx.lineTo(300, 200);\n    ctx.lineTo(500, 150);\n    ctx.stroke();\n}\nimg.src = \'image-20190703114102416.png\';',1039,0),(558,'ctx.save()','保存画笔的当前状态(如位置,颜色,线条长度等)。\n一般与restore()配合使用。\n\n补充:若多次保存画笔的状态,读取时会获得最后一次保存的画笔状态,之后再次读取会获得倒数第二次保存的画笔状态。(也就是说对某次画笔状态进行读取会导致该状态被销毁,下次无法再读取该状态)\n',1039,0),(559,'ctx.restore()','恢复画布到上一次保存的状态。\n一般与save()配合使用。\n\n补充:若多次保存画笔的状态,读取时会获得最后一次保存的画笔状态,之后再次读取会获得倒数第二次保存的画笔状态。(也就是说对某次画笔状态进行读取会导致该状态被销毁,下次无法再读取该状态)\n',1039,0),(560,'ctx.translate()','将画笔以当前所在位置进行偏移。与moveTo()不同的地方在于:moveTo是直接使画笔跳转至指定坐标,而translate()是使画笔在当前位置进行偏移。\n\n语法:ctx.translate(x,y)\nx:横坐标偏移\ny:纵坐标偏移\n',1039,0),(561,'ctx.rotate()','使画笔绘制的方向按顺时间旋转指定角度。\n\n语法:ctx.rotate(deg)\ndeg:旋转的角度,以弧度计\n\n补充:若须将角度转换为弧度,可以通过deg*Math.PI/180计算',1039,0),(562,'requestAnimationFrame()','该方法告诉浏览器你希望执行一个动画,并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。\n\n回调函数执行次数通常是每秒60次，但在大多数遵循W3C建议的浏览器中，回调函数执行次数通常与浏览器屏幕刷新次数相匹配。\n\n语法:requestAnimationFrame(callback)\n',1040,2),(563,'如何通过canvas制作动画','一、更新动画函数的处理\n1.清空canvas\n通过clearReact()来清空canvas，保证自己的画布是干净的\n2.保存canvas状态\n3.绘制动画图形\n4.恢复canvas状态\n\n二、操控动画的方法\nA.setInterval(functuon,delay)\n在设定好间隔时间后，function会定期执行\n\nB.setTimeout(function,delay)\n在设定好的时间之后执行函数\n\nC.requestAnimationFrame(callback)\n此方法一般每秒钟回到函数执行60次。告诉浏览器你希望执行一个动画，并在重绘之前，请求浏览器执行一个特定的函数来更新动画。',1023,0),(564,'SVG','SVG 是一种基于 XML 语法的图像格式，全称是可缩放矢量图（Scalable Vector Graphics）。其他图像格式都是基于像素处理的，SVG 则是属于对图像的形状描述，所以它本质上是文本文件，体积较小，且不管放大多少倍都不会失真。\n',1014,0),(565,'比较canvas和svg','一、描述:\n1.canvas\n- 通过js绘制的2D图形。\n- 逐像素渲染。\n\n2.svg\n- 基于XML描述的2D图形的语言,这意味着，SVG DOM中的每个元素都是可用的，可以为某个元素附加Javascript事件处理器。\n- 是通过对图形的数学描述来绘制的图形(矢量图形),因此无论如何放大缩小都不会失真。\n- 每个被绘制的图形均被视为对象。如果 SVG 对象的属性发生变化，那么浏览器能够自动重现图形。\n- 本身是文本文件,因此体积较小。\n\n二、有了svg为什么还要用canvas\n从以上可以看出,svg各方面都超越了canvas,那为什么还要使用canvas呢?\nsvg在绘图面积小,但数据大时性能较差,渲染时间较长,而canvas则恰恰相反。\n\n三、应用场景\n在绘图面积大,数据小时使用svg绘制较好。\n在绘图面积小,数据大时使用canvas绘制较好。\n\n\n',1023,0),(566,'XML','全写为EXtensible Markup Language。\n可扩展标记语言，被设计用于结构化、传输和存储数据，核心在于数据的内容。\n其具有严格的格式要求,如所有元素必须有关闭标签；标签对大小写敏感；必须正确嵌套；必须有根元素；属性值必须加引号等。\n不同于html,XML没有类似HTML的预定义标签（如head、body、h1、p），XML的标签由文档的创作者决定，它被设计为具有自我描述性',1014,0),(567,'XHTML','全写为EXtensible HyperText Markup Language。\n具备XML严格语法的HTML。\nXML1.0是以XML重构的HTML4.01。\nXHTML的设计目的原本是为了取代HTML,但随着html5的推出,它便被废弃了。\n但其整洁的格式受到一部分开发者的喜欢,html5将它的书写风格保留了下来并融汇进严格模式中,开发者可以自行选择代码的宽松或严格检查。',1014,0),(568,'<svg>','svg代码都放在顶层标签<svg>中。\n\n属性:\nwidth,height：指定svg图像在html元素中所占据的高宽,允许以百分比的形式表示。如果不指定,默认的宽高是300px*150px\n',1041,0),(569,'<circle>','绘制一个圆形。\n\n属性:\ncx,cy(Number)：指定圆心坐标\nr(Number)：半径\n',1041,0),(570,'<canvas>','定义一个画布元素。\n\n接口属性和方法具体参考【canvas画布属性/方法】。',1024,0),(571,'<svg>','定义一个矢量图元素。\n\n内部标签元素具体参考【svg矢量图标签】。\n\nsvg内部元素独有的css属性:\nfill:填充色\nstroke:描边色\nstroke-width:边框宽度',1024,0),(574,'str.match()','验证字符串是否符合正则表达式,返回布尔值。\n\n语法:str.match(reg)\nstr:要验证的字符串\nreg:正则表达式',44,2),(575,'fill','限定元素:svg内部标签元素\n\n设置元素填充颜色。',32,0),(576,'stroke','限定元素:svg内部标签元素\n\n设置元素描边颜色。',32,0),(577,'stroke-width','限定元素:svg内部标签元素\n\n设置元素的边框宽度',32,0),(578,'pt','测量字体字号大小的单位。\npt是绝对长度单位,不会因为屏幕分辨率大小,或其他因素改变。',43,0),(579,'cm','厘米',43,0),(580,'ex','1ex=字母x的高度。',43,0),(581,'LeetCode-练习算法','https://leetcode-cn.com/problemset/algorithms/?difficulty=%E7%AE%80%E5%8D%95',1007,0),(582,'数组动态和','数组动态和的计算公式为:\narr[i]=sum(arr[0]+...+arr[i-1])\n\n示例:\n输入:[1,2,3,4]\n输出:[1,3,6,10]',1043,0),(583,'judge','判断',48,0),(584,'<line>','绘制一条直线。\n\n属性:\nx1,y1：线段起始坐标\nx2,y2：线段终点坐标',1041,0),(585,'<polyline>','绘制一根折线。\n\n属性:\npoints：指定每个端点的坐标,横坐标与纵坐标之间用逗号分隔,多个坐标之间用空格分隔。示例:x1,y1 x2,y2',1041,0),(586,'<rect>','绘制一个矩形。\n\n属性:\nx,y：绘制矩形左上角的坐标\nwidth,height：矩形的大小',1041,0),(587,'<ellipse>','绘制一个椭圆。\n\n属性:\ncx,cy：圆心坐标\nrx：椭圆横向轴的半径\nry：椭圆纵向轴的半径',1041,0),(588,'ellipse','椭圆',48,0),(589,'<polygon>','绘制一个多边形。\n\n属性:\npoints：指定每个端点的坐标,横坐标与纵坐标之间用逗号分隔,多个坐标之间用空格分隔,最后一个坐标将自动与第一个坐标闭合。示例:x1,y1 x2,y2',1041,0),(590,'polygon','多边形',48,0),(591,'polyline','折线',48,0),(592,'<path>','绘制路径。\n\n属性:\nd：绘制顺序。其值格式为action x,y action2 x2,y2\n...\n  action：绘制动作。其值有:\n      M：移动到 \n      L：画直线到 \n      Z：闭合路径(无需参数)\n  x,y：动作移动到的坐标\n\n示例:\n<path d=\"\n  M 18,3\n  L 46,3\n  L 46,40\n  Z\n\"></path>\n\n补充:\n绘制路径时,起始使用M移动画笔是必须的。',1041,0),(593,'<text>','绘制文本。\n\n属性:\nx,y：文本区块基线起点的坐标\n\n示例:\n<text x=\"50\" y=\"25\">Hello World</text>',1041,0),(594,'<use>','复制一个形状。\n\n属性:\nhref：\'#\'+要复制的形状id\nx,y：新形状的左上角坐标\nwidth,height：将复制后的形状缩放到指定值\n\n补充:\n1.可以配合<g>标签实现复合图形复用。\n2.可以配合<defs>标签实现复合图形引用。',1041,0),(595,'<g>','用于将多个形状组成一个组(group),方便复用。\n该标签可包含多个svg绘图标签,并通过use标签实现复合图形复用。',1041,0),(596,'<defs>','用于自定义形状。它内部的代码不会显示，仅供配合<use>标签使用。',1041,0),(597,'<image>','用于插入图片文件。\n\n属性:\n(xlink:href)：图像的地址\nwidth,height：图像的缩放比',1041,0),(598,'<animate>','定义在其他svg内部标签元素以为其添加动画效果。\n\n属性:\nattributeName：发生动画效果的属性名\nfrom：单次动画的初始值\nto：单次动画的结束值\ndur：单次动画的持续时间,单位为s\nrepeatCount：动画的循环模式,可用数字作为值指定循环次数,也可指定值indefinite表示无限循环\nbegin: 动画延时,单位为s\n\n补充:单个<animate>标签可以为外部标签元素添加一个属性的动画效果,若要同时为多个属性添加,则在内部定义多个<animate>标签。',1041,0),(600,'draggable','指定元素是否能被拖动。\n\n值格式:true/false',1026,0),(601,'drag','拖动',48,0),(602,'前言','1.通过设置元素属性draggble=true使元素可以被拖动。\n2.浏览器的默认ondragenter和ondragover行为会拒绝任何元素拖放行为,因此必须先用event.preventDefault()取消浏览器的默认行为。\n',1044,0),(603,'ondragstart','【拖动对象-钩子函数】\n该事件在元素开始被拖动时触发。\n',1044,0),(604,'ondrag','【拖动对象-钩子函数】\n该函数在元素被拖动时反复触发。\n',1044,0),(605,'ondragend','【拖动对象-钩子函数】\n该事件在元素拖动结束时触发。\n',1044,0),(606,'ondragenter','【目标对象-钩子函数】\n被拖动元素进入目标元素占据的屏幕空间时触发,需要取消浏览器的默认行为。',1044,0),(607,'ondragover','【目标对象-钩子函数】\n被拖动元素在目标元素内时重复触发,需要取消浏览器的默认行为。',1044,0),(608,'	ondragleave','【目标对象-钩子函数】\n被拖动元素没有放下就离开目标元素时触发。\n',1044,0),(610,'ondrop','【目标对象-钩子函数】\n当被拖动元素在目标元素里放下时触发，一般需要取消浏览器的默认行为。',1044,0),(611,'event.dataTransfer','在进行拖放操作时，DataTransfer对象用来保存，通过拖放操作，拖动到浏览器的数据。它可以保存一项或多项数据、一种或者多种数据类型。\n\n语法:event.DataTransfer\n以下词条中将建成为dts。',1044,0),(612,'event.target','返回触发当前事件的元素',55,0),(613,'event.preventDefault()','阻止浏览器的默认行为。',1040,2),(614,'event.stopPropagation()','阻止事件向外冒泡。\n\n语法:event.stopPropagation()\nevent:可以在通过元素触发事件时通过第一个默认参数event获取到',1040,2),(615,'*el.cloneNode()','复制一个元素节点并返回。\n\n语法:el.cloneNode(deep)\ndeep(Boolean):可选。如果传递给它的参数是 true，它还将递归复制当前节点的所有子孙节点。否则，它只复制当前节点。\n\n示例:\nvar itm=document.getElementById(\"myList2\");\nvar cln=itm.cloneNode(true);\ndocument.getElementById(\"myList1\").appendChild(cln);\n该方法将把#myList2元素的节点全都复制到#myList1元素中。',1040,2),(616,'dts.setData()','设置拖动操作的当前数据。\n\n语法:dts.setData(format,data)\nformat:拖动数据的MIME类型，通常text/plain和text/uri-list\ndata:要添加的数据\n\n补充:\nformat的类型为text/plain时可以直接通过dts.getData(\"text/plain\");\n但类型为text/uri-list时应该通过dts.getData(\"URL\")来获取;',1044,0),(617,'dts.getData()','获取指定类型的拖放数据。\n\n语法:dts.getData(type)\ntype:指定类型。format的类型为text/plain时可以直接通过dts.getData(\"text/plain\");类型为text/uri-list时应该通过dts.getData(\"URL\")来获取',1044,0),(618,'dts.clearData()','删除当前元素设置的数据。\n一般需要在ondragend方法中使用一次。\n\n语法:dts.clearData(type)\ntype:format的类型为text/plain时可以直接通过dts.getData(\"text/plain\");类型为text/uri-list时应该通过dts.getData(\"URL\")来获取',1044,0),(619,'dts.setDragImage()','使用该方法以定义拖拽时跟随鼠标指针显示的图片。\n\n语法:dts.setDragImage(img,xOffset,yOffset)\nimg:拖拽图像元素,通常是一个image或canvas元素\nxOffset :图片的横向偏移量\nyOffset: 图片的纵向偏移量',1044,0),(620,'dts.dropEffect','该属性设置拖动的效果\n\n可用值:\ncopy:表示拖动的数据将从其当前位置复制到放置位置。\nmove:表示拖动的数据将从其当前位置移动到放置位置。\nlink:表示将在源位置和放置位置之间创建某种形式的关系或连接。\n\n补充:若同时有多个效果,可以用驼峰法将它们连接,如dts.dropEffect=\"copyMove\"',1044,0),(621,'parent.replaceChild()','替换一个元素节点并返回,被替换的节点将被清除。\n\n语法:parent.replaceChild(el, el2)\nel:替换的执行体元素\nel2:替换的目标元素\n',1040,2),(628,'str.conatins()','验证字符串中是否包含了指定字符串,返回布尔值。\n\n语法:str.contains(str2)\nstr2：指定字符串',44,3),(629,'el.addEventListener()','为元素添加监听事件。\n\n语法:el.addEventListener(event,callback,action)\nevent:监听事件,不用加字符串\"on\"\nfunc:监听到时执行的回调函数\naction:该值为false时指示事件冒泡;为true时指示事件捕获。该值默认为false\n\n补充:addEventLinstener()能为对象的同一个事件添加多个响应函数,但若多个响应函数的指向地址相同,则不会被重复添加。',1040,2),(630,'event.target','返回当前触发事件的底层子元素。(冒泡)\n与event.currentTarget对应\n\n示例:\n1.html\n<ul>\n  <li><span>点击该元素</span></li>\n</ul>\n\n2.js\nul.addEventListener(\'click\',function(event){\n  console.log(event.target) //=>输出span\n})\n',55,0),(631,'event.currentTarget','返回当前触发事件的元素。(捕获)\n与event.target对应\n\n示例:\n1.html\n<ul>\n  <li><span>点击该元素</span></li>\n</ul>\n\n2.js\nul.addEventListener(\'click\',function(event){\n  console.log(event.currentTarget) \n  //=>输出ul\n})\n',55,0),(632,'pointer-events','设置元素是否响应事件。\n\n可用值:\nauto:默认。正常响应\nnone:元素不会响应任何事件',32,0),(633,'event.relatedTarget','relatedTarget事件属性返回与事件的目标节点相关的节点。\n\n对于 mouseover/dragover 事件来说，该属性是鼠标指针移到目标节点上时所离开的那个节点。\n对于 mouseout/dragleave 事件来说，该属性是离开目标时，鼠标指针进入的节点。\n对于其他事件,大多数情况下该属性没有作用。',55,0),(634,'改变过程序文件夹位置','改变整个程序文件夹位置后,再次运行会提示包已丢失。\n将整个node_modules文件夹删掉,再次使用cnpm install安装即可解决。\n\n注意该问题在将整个程序文件夹发给其他人后也会出现,因此在发给别人前应自行删掉node_modules,再发给别人让他在运行前先install一下。',1046,0),(635,'drop','放置',48,0),(636,'el.insertBefore()','在节点的某个子节点之前插入一个兄弟节点。\n\n语法:el.insertBefore(el_new,el_child)\nel_new:要插入的新节点\nel_child:被插入的子节点',1040,0),(637,'el.previousElementSibling','返回元素同级的上一个兄弟节点。',55,0),(638,'el.previousSibling','返回元素同级的上一个字符(包括空格,换行等)。',55,0),(639,'el.hasAttribute()','判断元素是否有指定属性,返回布尔值。\n\n语法:el.hasAttribute(prop)\nprop:属性名',55,0),(640,'el.removeEventListener()','移除元素的指定监听事件。\n\n语法:el.removeEventListener(event,func)\nevent:监听事件\nfunc:要移除的监听事件上的函数\n\n例:\n// func是一个方法\nel.addEventLinstener(\'click\',func)\nel.removeEventListener(\'click\',func)',1040,1),(641,'兼容','',1013,0),(642,'基线是什么','',1013,0),(643,'item','项目',48,0),(644,'flex-direction','限定flex元素。\n设置弹性盒的主轴方向。\n\n可选值:\nrow:(默认)主轴方向为从左到右。\nrow-reverse:主轴方向为从右到左。\ncolumn:主轴方向为从上到下。\ncolumn-reverse:主轴方向为从下到上。',32,0),(645,'flex-wrap','限定flex元素。\n设置当弹性盒的内部元素超过其边界时,内部元素如何换行。\n\n可用值:\nnowrap：默认。不换行,超出的元素会显示在弹性元素盒之外\nwrap：正常换行\nwrap-reverse：换行,但行将反向显示(比如原第一行会显示在最下面,原第二行显示在其上一行,以此类推)\n',32,0),(646,'*justify-content','限定flex元素。\n设置内部item主轴方向上的排列方式。\n\n可用值:\nflex-start:起点对齐\nflex-end:终点对齐\ncenter:居中对齐\nspace-between:两端对齐,item间的间隔相等\nspace-around:item间的间隔相等,且两端item的另一侧将保留间隔/2的空间',32,0),(647,'*align-items','限定flex元素。\n设置内部item交叉轴方向上如何排列。\n\n可用值:\nflex-start:起点对齐\nflex-end:终点对齐\ncenter:居中对齐\nstretch:默认。若item未设置宽度或设置为auto,将占满整个容器的高度\nbaseline:项目的第一行文字基线对齐',32,0),(648,'align-content','限定flex元素。\n设置内部多根轴线的对齐方式,若只有一条轴线,则该属性不起作用。\n\n可用值:\nflex-start:起点对齐\nflex-end:终点对齐\ncenter:居中对齐\nstretch:默认。轴线占据整个交叉轴\nspace-between:两端对齐,基线间间隔相等\nspace-around:基线间间隔相等,且两端item的另一侧留有间隔/2的空间',32,0),(649,'order','限定flex-item元素。\n设置项目的排列顺序。\n数字越小,排列越往前。默认为0。\n\n值格式:Number',32,0),(650,'*flex-grow','限定flex-item元素。\n设置项目的放大比例。默认为0。\n\n值格式:Number\n\n示例:\n1.如果弹性盒内部仅有一个项目且其flex-grow值为1,则该项目使用弹性盒的主轴方向所有空间。\n\n2.如果弹性盒内部有1个固定宽度项目,及另一个flex-grow值为1的项目,则该项目使用弹性盒的主轴方向上的剩余空间。\n\n3.如果弹性盒内部有两个flex-grow为1的项目,一个flex-grow为2的项目,则两个flex-grow为1的项目将各自使用弹性盒主轴方向空间的1/4;flex-grow为2的项目将使用弹性盒主轴方向空间的1/2。',32,0),(651,'*flex-shrink','限定flex-item元素。\n设置项目的缩小比例,默认为1。当元素盒空间不足时,该项目将缩小。\n\n值格式:Number\n\n示例:\n  当弹性盒内有a项目缩小比例为0,项目b缩小比例为1,设置它们的宽度为10px。\n  弹性盒的宽度小于20px时,项目a大小保持不变,项目b缩小宽度至可以放下所有元素',32,0),(652,'flex-basis','限定flex-item元素。\n设置弹性盒分配多余空间时,项目占据的主轴空间。浏览器根据这个属性,计算主轴有没有多余空间。\n默认值为auto,即项目的本来大小。\n\n值格式:等同于width/height',32,0),(653,'*flex','限定flex-item元素。\n复合属性,依次指定项目的flex-grow,flex-shrink和flex-basis属性。\n\n补充:优先使用该属性,因为浏览器会推算相关值。',32,0),(654,'*align-self','限定flex-item元素。\n设置项目与弹性盒其他项目不同的交叉轴对齐方式。\n\n可用值:\nflex-start:起点对齐\nflex-end:终点对齐\ncenter:居中对齐\nstretch:默认。若item未设置宽度或设置为auto,将占满整个容器的高度\nbaseline:项目的第一行文字基线对齐',32,0),(655,'banner','广告',48,0),(656,'sub','全写为baisubordinate\n在..下边;在..底部\n一般用作css类前缀以表示一个元素是另一个元素的内部元素\n\n示例:\n<div id=\"nav\">\n  <div id=\"subnav\">\n    //子 导航条\n  </div>\n</div>',48,0),(657,'tip','小技巧',48,0),(658,'guide','指南',48,0),(659,'summary','摘要',48,0),(660,'oriented','面向\n\n例:Object Oriented\n面向对象的',48,0),(661,'layout','布局',48,0),(662,'calc','计算',48,0),(663,'font-smoothing','为元素内字体添加抗锯齿。\n\n可用值:\nnone：不添加抗锯齿。若文本像素较低,可以调成该值。\nsubpixel-antialiased：低像素抗锯齿。\nantialiased：高抗锯齿。',32,7),(664,'虚拟DOM是什么','虚拟dom其实就是一个对象,通过对象+方法的形式将虚拟dom转化为真实dom。',1016,0),(665,'new Proxy()','一、概述\nProxy用于代理对象某些操作的默认行为,属于元编\n程。\n\n二、语法\nvar obj=new Proxy(vari,...{func(){})\nvari:要代理的目标对象\nfunc(){}:拦截并重写的对象操作函数\n\n三、拦截行为函数\n1.get(target, propKey, receiver)\n拦截对象属性的读取。\n2.set(target, propKey, value, receiver)\n拦截对象属性的设置,返回布尔值。\n3.has(target, propKey)\n拦截for..in..操作,返回布尔值。\n4.deleteProperty(target, propKey)\n拦截delete proxy[propKey]操作,返回布尔值。\n5.apply(target, object, args)\n拦截Proxy实例作为函数调用的操作,比如proxy(...args)、proxy.call(object, ...args)、proxy.apply(...)。\n\n四、形参解释\n1.target:目标对象\n2.propKey:属性名\n3.receiver:Proxy对象本身\n4.value:所拦截希望修改后的值\n5.args:目标对象参数数组\n',1047,0),(666,'profile','简介',48,0),(667,'GitHub+VSCode','https://www.bilibili.com/video/BV1dK411p7RF?t=258\n看完这个视频就能彻底学会怎么用GitHub代理你的代码,不会Git从没上过gitHub也能直接看,亲测有用!',1007,0);
/*!40000 ALTER TABLE `dt_h3` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-06-21 15:50:47
